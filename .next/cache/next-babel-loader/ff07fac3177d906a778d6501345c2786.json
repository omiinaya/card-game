{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\user\\\\register.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n/* utils */\n\nimport { absoluteUrl } from '../../middleware/utils';\n/* components */\n\nimport Layout from '../../components/layout/Layout';\nimport FormRegister from '../../components/form/FormRegister';\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/* register schemas */\n\nconst FORM_DATA_REGISTER = {\n  username: {\n    value: '',\n    label: 'Username',\n    min: 5,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Username fill correctly'\n    }\n  },\n  email: {\n    value: '',\n    label: 'Email',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: emailRegEx,\n      error: 'Email fill correctly'\n    }\n  },\n  password: {\n    value: '',\n    label: 'Password',\n    min: 5,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Password fill correctly'\n    }\n  }\n};\n\nfunction Register(props) {\n  const router = useRouter();\n  const {\n    origin,\n    baseApiUrl\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: stateFormData,\n    1: setStateFormData\n  } = useState(FORM_DATA_REGISTER);\n  const {\n    0: stateFormError,\n    1: setStateFormError\n  } = useState([]);\n  const {\n    0: stateFormValid,\n    1: setStateFormValid\n  } = useState(false);\n  const {\n    0: stateFormMessage,\n    1: setStateFormMessage\n  } = useState({});\n  useEffect(() => {//console.log(stateFormData)\n  }, [stateFormData]);\n\n  function onChangeHandler(e) {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, {\n      [name]: _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n        value\n      })\n    }));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  async function onSubmitHandler(e) {\n    e.preventDefault();\n\n    let data = _objectSpread({}, stateFormData);\n    /* validation handler */\n\n\n    const isValid = validationHandler(stateFormData);\n\n    if (isValid) {\n      /* username */\n      data = _objectSpread(_objectSpread({}, data), {}, {\n        username: data.username.value\n      });\n      /* email */\n\n      data = _objectSpread(_objectSpread({}, data), {}, {\n        email: data.email.value\n      });\n      /* password */\n\n      data = _objectSpread(_objectSpread({}, data), {}, {\n        password: data.password.value\n      });\n      /* validation handler */\n\n      const isValid = validationHandler(stateFormData);\n\n      if (isValid) {\n        // Call an external API endpoint to get posts.\n        // You can use any data fetching library\n        setLoading(!loading);\n\n        const x = async function () {\n          const loginApi = fetch(`${baseApiUrl}/user`, {\n            method: 'POST',\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }).catch(error => {\n            console.error('Error:', error);\n          });\n          let result = await loginApi.json();\n\n          if (result.status === 'success' && result.message === 'done') {\n            window.location.href = '/';\n          } else {\n            setStateFormMessage(result);\n          }\n        };\n\n        const isUser = await fetch(`${baseApiUrl}/user`, {\n          method: 'GET'\n        }).then(function (response) {\n          return response.json();\n        }).then(function (res) {\n          var x = res.data.filter(user => user.email === data.email);\n\n          if (x.length >= 1) {\n            console.log('already exists');\n          } else {\n            x();\n          }\n        }).then(function () {});\n        /*\r\n        const loginApi = await fetch(`${baseApiUrl}/user`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        }).catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n        let result = await loginApi.json();\r\n        if (result.status === 'success' && result.message === 'done') {\r\n          //window.location.href = '/';\r\n        } else {\r\n          setStateFormMessage(result);\r\n        }*/\n\n        setLoading(false);\n      }\n    }\n  }\n\n  function validationHandler(states, e) {\n    const input = e && e.target.name || '';\n    const errors = [];\n    let isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: `${states[e.target.name].label} required`,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: `Min ${states[input].label} length ${states[input].min}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: `Min ${states[input].label} length ${states[input].max}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(item => {\n        item.forEach(field => {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: `${field.label} required`,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: `Min ${field.label} length ${field.min}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: `Min ${field.label} length ${field.max}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | Register page\",\n    url: `${origin}${router.asPath}`,\n    origin: origin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/user'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"\\u2190 Back\")), __jsx(FormRegister, {\n    props: {\n      onSubmitHandler,\n      onChangeHandler,\n      loading,\n      stateFormData,\n      stateFormError,\n      stateFormMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }))));\n}\n/* getServerSideProps */\n\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  const referer = req.headers.referer || '';\n  const baseApiUrl = `${origin}/api`;\n  return {\n    props: {\n      origin,\n      baseApiUrl,\n      referer\n    }\n  };\n}\nexport default Register;","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/user/register.js"],"names":["React","useState","useEffect","Link","useRouter","absoluteUrl","Layout","FormRegister","emailRegEx","FORM_DATA_REGISTER","username","value","label","min","max","required","validator","regEx","error","email","password","Register","props","router","origin","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormValid","setStateFormValid","stateFormMessage","setStateFormMessage","onChangeHandler","e","name","currentTarget","validationHandler","onSubmitHandler","preventDefault","data","isValid","x","loginApi","fetch","method","headers","Accept","body","JSON","stringify","catch","console","result","json","status","message","window","location","href","isUser","then","response","res","filter","user","length","log","states","input","target","errors","hint","isInvalid","test","Object","entries","forEach","item","field","asPath","pathname","getServerSideProps","context","req","referer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\n/* utils */\r\nimport { absoluteUrl } from '../../middleware/utils';\r\n\r\n/* components */\r\nimport Layout from '../../components/layout/Layout';\r\nimport FormRegister from '../../components/form/FormRegister';\r\n\r\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n/* register schemas */\r\nconst FORM_DATA_REGISTER = {\r\n  username: {\r\n    value: '',\r\n    label: 'Username',\r\n    min: 5,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Username fill correctly',\r\n    },\r\n  },\r\n  email: {\r\n    value: '',\r\n    label: 'Email',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: emailRegEx,\r\n      error: 'Email fill correctly',\r\n    },\r\n  },\r\n  password: {\r\n    value: '',\r\n    label: 'Password',\r\n    min: 5,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Password fill correctly',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Register(props) {\r\n  const router = useRouter();\r\n  const { origin, baseApiUrl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_REGISTER);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n\r\n  useEffect(() => {\r\n    //console.log(stateFormData)\r\n  }, [stateFormData]);\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      /* username */\r\n      data = { ...data, username: data.username.value };\r\n      /* email */\r\n      data = { ...data, email: data.email.value };\r\n      /* password */\r\n      data = { ...data, password: data.password.value };\r\n\r\n      /* validation handler */\r\n      const isValid = validationHandler(stateFormData);\r\n\r\n      if (isValid) {\r\n        // Call an external API endpoint to get posts.\r\n        // You can use any data fetching library\r\n        setLoading(!loading);\r\n\r\n        const x = async function () {\r\n          const loginApi = fetch(`${baseApiUrl}/user`, {\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          }).catch(error => {\r\n            console.error('Error:', error);\r\n          })\r\n          let result = await loginApi.json();\r\n          if (result.status === 'success' && result.message === 'done') {\r\n            window.location.href = '/';\r\n          } else {\r\n            setStateFormMessage(result);\r\n          }\r\n        }\r\n\r\n        const isUser = await fetch(`${baseApiUrl}/user`, {\r\n          method: 'GET',\r\n        }).then(function (response) {\r\n          return response.json();\r\n        }).then(function (res) {\r\n          var x = res.data.filter(user => user.email === data.email)\r\n          if (x.length >= 1) {\r\n            console.log('already exists')\r\n          } else {\r\n            x()\r\n          }\r\n        }).then(function () {\r\n\r\n        })\r\n        /*\r\n        const loginApi = await fetch(`${baseApiUrl}/user`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        }).catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n        let result = await loginApi.json();\r\n        if (result.status === 'success' && result.message === 'done') {\r\n          //window.location.href = '/';\r\n        } else {\r\n          setStateFormMessage(result);\r\n        }*/\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Min ${states[input].label} length ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Min ${states[input].label} length ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Min ${field.label} length ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Min ${field.label} length ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Next.js with Sequelize | Register page\"\r\n      url={`${origin}${router.asPath}`}\r\n      origin={origin}\r\n    >\r\n      <div className=\"container\">\r\n        <main className=\"content-detail\">\r\n          <Link\r\n            href={{\r\n              pathname: '/user',\r\n            }}\r\n          >\r\n            <a>&larr; Back</a>\r\n          </Link>\r\n          <FormRegister\r\n            props={{\r\n              onSubmitHandler,\r\n              onChangeHandler,\r\n              loading,\r\n              stateFormData,\r\n              stateFormError,\r\n              stateFormMessage,\r\n            }}\r\n          />\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const referer = req.headers.referer || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      baseApiUrl,\r\n      referer,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}