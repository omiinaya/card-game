{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../models/index');\n\nconst handler = nextConnect() // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n  const cardRarities = await models.cardRarities.findAndCountAll({\n    offset: nextPage ? +nextPage : 0\n  });\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: cardRarities.rows,\n    total: cardRarities.count,\n    nextPage: +nextPage + 5\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    typeName\n  } = body;\n  const newCardRarity = await models.cardRarity.create({\n    typeName,\n    status: 1\n  });\n  return res.status(200).json({\n    status: 'success',\n    message: 'done',\n    data: newCardRarit\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/pages/api/cardRarity/index.js"],"names":["nextConnect","models","require","handler","get","req","res","query","nextPage","method","body","cardRarities","findAndCountAll","offset","statusCode","json","status","data","rows","total","count","post","typeName","newCardRarity","cardRarity","create","message","newCardRarit"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAGH,WAAW,GACzB;AADyB,CAExBI,GAFa,CAET,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;AAMA,QAAMM,YAAY,GAAG,MAAMV,MAAM,CAACU,YAAP,CAAoBC,eAApB,CAAoC;AAC7DC,IAAAA,MAAM,EAAEL,QAAQ,GAAG,CAACA,QAAJ,GAAe;AAD8B,GAApC,CAA3B;AAIAF,EAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACAR,EAAAA,GAAG,CAACS,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,IAAI,EAAEN,YAAY,CAACO,IAFZ;AAGPC,IAAAA,KAAK,EAAER,YAAY,CAACS,KAHb;AAIPZ,IAAAA,QAAQ,EAAE,CAACA,QAAD,GAAY;AAJf,GAAT;AAMD,CApBa,EAsBd;AAtBc,CAuBba,IAvBa,CAuBR,OAAOhB,GAAP,EAAYC,GAAZ,KAAoB;AACxB,QAAM;AAAEI,IAAAA;AAAF,MAAWL,GAAjB;AACA,QAAM;AACJiB,IAAAA;AADI,MAEFZ,IAFJ;AAGA,QAAMa,aAAa,GAAG,MAAMtB,MAAM,CAACuB,UAAP,CAAkBC,MAAlB,CAAyB;AACnDH,IAAAA,QADmD;AAEnDN,IAAAA,MAAM,EAAE;AAF2C,GAAzB,CAA5B;AAIA,SAAOV,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,IAAAA,MAAM,EAAE,SADkB;AAE1BU,IAAAA,OAAO,EAAE,MAFiB;AAG1BT,IAAAA,IAAI,EAAEU;AAHoB,GAArB,CAAP;AAKD,CArCa,CAAhB;AAuCA,eAAexB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../models/index');\r\n\r\nconst handler = nextConnect()\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { nextPage },\r\n      method,\r\n      body,\r\n    } = req;\r\n\r\n    const cardRarities = await models.cardRarities.findAndCountAll({\r\n      offset: nextPage ? +nextPage : 0,\r\n    });\r\n\r\n    res.statusCode = 200;\r\n    res.json({\r\n      status: 'success',\r\n      data: cardRarities.rows,\r\n      total: cardRarities.count,\r\n      nextPage: +nextPage + 5,\r\n    });\r\n  })\r\n\r\n  // Post method\r\n  .post(async (req, res) => {\r\n    const { body } = req;\r\n    const {\r\n      typeName,\r\n    } = body;\r\n    const newCardRarity = await models.cardRarity.create({\r\n      typeName,\r\n      status: 1,\r\n    });\r\n    return res.status(200).json({\r\n      status: 'success',\r\n      message: 'done',\r\n      data: newCardRarit,\r\n    });\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}