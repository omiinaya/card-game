{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Box.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nvar style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  \"float\": 'left'\n};\nexport var Box = function Box(_ref) {\n  _s();\n\n  var cardName = _ref.cardName,\n      cardImage = _ref.cardImage,\n      cardRarity = _ref.cardRarity,\n      cardType = _ref.cardType,\n      typeImage = _ref.typeImage;\n\n  var _useDrag = useDrag(function () {\n    return {\n      type: ItemTypes.BOX,\n      item: {\n        cardName: cardName\n      },\n      end: function end(item, monitor) {\n        var dropResult = monitor.getDropResult();\n\n        if (item && dropResult) {\n          //function executed on drop\n          console.log(\"You dropped \".concat(item.name, \" into \").concat(dropResult.name, \"!\"));\n        }\n      },\n      collect: function collect(monitor) {\n        return {\n          isDragging: monitor.isDragging(),\n          handlerId: monitor.getHandlerId()\n        };\n      }\n    };\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: drag,\n    role: \"Box\",\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      opacity: opacity\n    }),\n    \"data-testid\": \"box-\".concat(name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    id: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    id: \"cardTemplate\",\n    src: \"https://i.ibb.co/mG6jvpR/monster-normal.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(\"img\", {\n    id: \"cardFace\",\n    src: cardImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), __jsx(\"img\", {\n    id: \"starLevel\",\n    src: \"https://i.ibb.co/M1bYC6V/star.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    id: \"cardTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, cardName), __jsx(\"img\", {\n    id: \"cardType\",\n    src: typeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), __jsx(\"h4\", {\n    id: \"monsterType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"[\", cardMonster, \"]\"), __jsx(\"div\", {\n    id: \"monsterDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, cardDesc), __jsx(\"div\", {\n    id: \"monsterAtk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, cardAtk), __jsx(\"div\", {\n    id: \"monsterDef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, cardDef))));\n};\n\n_s(Box, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Box.jsx"],"names":["useDrag","ItemTypes","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","Box","cardName","cardImage","cardRarity","cardType","typeImage","type","BOX","item","end","monitor","dropResult","getDropResult","console","log","name","collect","isDragging","handlerId","getHandlerId","drag","opacity","cardMonster","cardDesc","cardAtk","cardDef"],"mappings":"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","sourcesContent":["import { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'white',\r\n    padding: '0.5rem 1rem',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n};\r\nexport const Box = function Box({\r\n    cardName,\r\n    cardImage,\r\n    cardRarity,\r\n    cardType,\r\n    typeImage\r\n}) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: ItemTypes.BOX,\r\n        item: { cardName },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                //function executed on drop\r\n                console.log(`You dropped ${item.name} into ${dropResult.name}!`);\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n            handlerId: monitor.getHandlerId(),\r\n        }),\r\n    }));\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (<div ref={drag} role=\"Box\" style={{ ...style, opacity }} data-testid={`box-${name}`}>\r\n        <div id=\"card\">\r\n            <link\r\n                href=\"https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap\"\r\n                rel=\"stylesheet\"\r\n            />\r\n            <div id=\"cardContainer\">\r\n                <img\r\n                    id=\"cardTemplate\"\r\n                    src=\"https://i.ibb.co/mG6jvpR/monster-normal.png\"\r\n                />\r\n                <img\r\n                    id=\"cardFace\"\r\n                    src={cardImage} />\r\n                <img\r\n                    id=\"starLevel\"\r\n                    src=\"https://i.ibb.co/M1bYC6V/star.png\"\r\n                />\r\n                <div id=\"cardTitle\">{cardName}</div>\r\n                <img id=\"cardType\" src={typeImage} />\r\n                <h4 id=\"monsterType\">[{cardMonster}]</h4>\r\n                <div id=\"monsterDescription\">{cardDesc}</div>\r\n                <div id=\"monsterAtk\">{cardAtk}</div>\r\n                <div id=\"monsterDef\">{cardDef}</div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}