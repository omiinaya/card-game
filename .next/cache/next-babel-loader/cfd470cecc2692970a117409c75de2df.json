{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Field.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport { Board } from './Board';\nimport { Box } from './Card';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst PlayerHand = memo(function Container() {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n\n  const getCards = () => {\n    //if cards have not loaded yet then load them from server.\n    if (cards.length === 0) {\n      axios.get(`/api/card`).then(res => {\n        setCards(res.data.data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    sortCardIds();\n  }, [cards]);\n\n  const handleCardPlayed = x => {\n    setCards(prev => prev.filter(card => {\n      return card.id != x - 1;\n    }));\n  };\n\n  const sortCardIds = () => {\n    var myArray = cards;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, cards.map((card, index) => __jsx(\"div\", {\n    key: card.cardName + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"generated-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, __jsx(Box, {\n    id: card.id,\n    cardName: card.cardName,\n    cardImage: card.cardImage,\n    cardRarity: card.cardRarity,\n    cardType: card.cardType,\n    typeImage: card.typeImage,\n    cardDesc: card.cardDesc,\n    cardMonster: card.cardMonster,\n    cardAtk: card.cardATK,\n    cardDef: card.cardDEF,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }))))));\n});\nexport default PlayerHand;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Field.jsx"],"names":["memo","Board","Box","axios","useEffect","useState","PlayerHand","Container","cards","setCards","getCards","length","get","then","res","data","sortCardIds","handleCardPlayed","x","prev","filter","card","id","myArray","forEach","element","index","overflow","clear","map","cardName","cardImage","cardRarity","cardType","typeImage","cardDesc","cardMonster","cardATK","cardDEF"],"mappings":"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","sourcesContent":["import { memo } from 'react';\r\nimport { Board } from './Board';\r\nimport { Box } from './Card';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [cards, setCards] = useState([]);\r\n\r\n    const getCards = () => {\r\n        //if cards have not loaded yet then load them from server.\r\n        if (cards.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                setCards(res.data.data);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortCardIds();\r\n    }, [cards]);\r\n\r\n    const handleCardPlayed = (x) => {\r\n        setCards(prev => prev.filter(card => {\r\n            return card.id != x - 1\r\n        }))\r\n    }\r\n\r\n    const sortCardIds = () => {\r\n        var myArray = cards\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Board />\r\n            </div>\r\n            <div className=\"cards\">\r\n                {cards.map((card, index) => (\r\n                    <div key={card.cardName + index}>\r\n                        <div className=\"generated-card\">\r\n                            <Box\r\n                                id={card.id}\r\n                                cardName={card.cardName}\r\n                                cardImage={card.cardImage}\r\n                                cardRarity={card.cardRarity}\r\n                                cardType={card.cardType}\r\n                                typeImage={card.typeImage}\r\n                                cardDesc={card.cardDesc}\r\n                                cardMonster={card.cardMonster}\r\n                                cardAtk={card.cardATK}\r\n                                cardDef={card.cardDEF}\r\n                                playCard={handleCardPlayed}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}