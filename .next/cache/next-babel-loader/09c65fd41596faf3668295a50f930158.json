{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Board.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport Field from './Field';\nimport Hand from './Hand';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst PlayerHand = memo(function Container() {\n  const {\n    0: init,\n    1: setInit\n  } = useState(false);\n  const {\n    0: onHand,\n    1: setOnHand\n  } = useState([]);\n  const {\n    0: onField,\n    1: setOnField\n  } = useState([]);\n\n  const getCards = () => {\n    //if onHand have not loaded yet then load them from server.\n    if (onHand.length === 0) {\n      axios.get(`/api/card`).then(res => {\n        let hand = res.data.data.sort(() => Math.random() - Math.random()).slice(0, 10);\n        sortIDs(hand);\n        setOnHand(hand);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    sortIDs(onHand);\n    console.log(onHand);\n  }, [onHand]);\n  useEffect(() => {\n    //sortIDs(onField)\n    console.log(onField);\n  }, [onField]);\n\n  const handleCardPlayed = index => {\n    setOnHand(prev => prev.filter(card => {\n      console.log(card.id, index);\n      return Number(card.id) != Number(index - 1);\n    })); //setOnField(prevArray => [...prevArray, onHand.filter(card => card.id == index - 1)[0]])\n  };\n\n  const sortIDs = array => {\n    var myArray = array;\n    myArray.forEach(function (element, index) {\n      element.id = init ? index : index + 1;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    cards: onField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(Hand, {\n    cards: onHand,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n});\nexport default PlayerHand;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Board.jsx"],"names":["memo","Field","Hand","axios","useEffect","useState","PlayerHand","Container","init","setInit","onHand","setOnHand","onField","setOnField","getCards","length","get","then","res","hand","data","sort","Math","random","slice","sortIDs","console","log","handleCardPlayed","index","prev","filter","card","id","Number","array","myArray","forEach","element","overflow","clear"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,UAAU,GAAGN,IAAI,CAAC,SAASO,SAAT,GAAqB;AAEzC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,QAAQ,GAAG,MAAM;AACnB;AACA,QAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrBZ,MAAAA,KAAK,CAACa,GAAN,CAAW,WAAX,EAAuBC,IAAvB,CAA6BC,GAAD,IAAS;AACjC,YAAIC,IAAI,GAAGD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,IAAd,CAAmB,MAAMC,IAAI,CAACC,MAAL,KAAgBD,IAAI,CAACC,MAAL,EAAzC,EAAwDC,KAAxD,CAA8D,CAA9D,EAAiE,EAAjE,CAAX;AACAC,QAAAA,OAAO,CAACN,IAAD,CAAP;AACAR,QAAAA,SAAS,CAACQ,IAAD,CAAT;AACH,OAJD;AAKH;AACJ,GATD;;AAWAf,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,OAAO,CAACf,MAAD,CAAP;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AACH,GAHQ,EAGN,CAACA,MAAD,CAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACH,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAKA,QAAMgB,gBAAgB,GAAIC,KAAD,IAAW;AAChClB,IAAAA,SAAS,CAACmB,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAaC,IAAD,IAAU;AACpCN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,EAAjB,EAAqBJ,KAArB;AACA,aAAOK,MAAM,CAACF,IAAI,CAACC,EAAN,CAAN,IAAmBC,MAAM,CAACL,KAAK,GAAG,CAAT,CAAhC;AACH,KAHiB,CAAT,CAAT,CADgC,CAKhC;AACH,GAND;;AAQA,QAAMJ,OAAO,GAAIU,KAAD,IAAW;AACvB,QAAIC,OAAO,GAAGD,KAAd;AACAC,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAUC,OAAV,EAAmBT,KAAnB,EAA0B;AACtCS,MAAAA,OAAO,CAACL,EAAR,GAAczB,IAAI,GAAGqB,KAAH,GAAWA,KAAK,GAAG,CAArC;AACH,KAFD;AAGH,GALD;;AAOA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE5B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,KAAK,EAAE;AAAE2B,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE9B,MAAb;AAAqB,IAAA,QAAQ,EAAEkB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH,CAxDsB,CAAvB;AA0DA,eAAetB,UAAf","sourcesContent":["import { memo } from 'react';\r\nimport Field from './Field';\r\nimport Hand from './Hand';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [init, setInit] = useState(false)\r\n    const [onHand, setOnHand] = useState([])\r\n    const [onField, setOnField] = useState([])\r\n\r\n    const getCards = () => {\r\n        //if onHand have not loaded yet then load them from server.\r\n        if (onHand.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                let hand = res.data.data.sort(() => Math.random() - Math.random()).slice(0, 10)\r\n                sortIDs(hand)\r\n                setOnHand(hand);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortIDs(onHand)\r\n        console.log(onHand)\r\n    }, [onHand]);\r\n\r\n    useEffect(() => {\r\n        //sortIDs(onField)\r\n        console.log(onField)\r\n    }, [onField]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        setOnHand(prev => prev.filter((card) => {\r\n            console.log(card.id, index)\r\n            return Number(card.id) != Number(index - 1)\r\n        }))\r\n        //setOnField(prevArray => [...prevArray, onHand.filter(card => card.id == index - 1)[0]])\r\n    }\r\n\r\n    const sortIDs = (array) => {\r\n        var myArray = array\r\n        myArray.forEach(function (element, index) {\r\n            element.id = (init ? index : index + 1);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Field cards={onField} />\r\n            </div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Hand cards={onHand} playCard={handleCardPlayed} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}