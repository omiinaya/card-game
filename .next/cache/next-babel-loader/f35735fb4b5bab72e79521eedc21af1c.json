{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Card.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nimport CardCard from '../cardCard/CardCard';\nconst style = {\n  border: '1px dashed gray',\n  cursor: 'move',\n  zIndex: 10,\n  height: '150px',\n  padding: 0,\n  margin: 0\n};\nexport const Card = function Card({\n  id,\n  cardName,\n  cardImage,\n  cardRarity,\n  cardType,\n  cardMonster,\n  cardDesc,\n  typeImage,\n  cardAtk,\n  cardDef,\n  playCard\n}) {\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.CARD,\n    item: {\n      id,\n      cardName\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        playCard(item.id);\n        console.log(`You dropped ${item.cardName} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      handlerId: monitor.getHandlerId()\n    })\n  }));\n  const opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: drag,\n    role: \"Card\",\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      opacity\n    }),\n    \"data-testid\": `card-${cardName}`,\n    onClick: () => {\n      console.log(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(CardCard, {\n    id: id,\n    cardName: cardName,\n    cardImage: cardImage,\n    cardRarity: cardRarity,\n    cardType: cardType,\n    cardMonster: cardMonster,\n    cardDesc: cardDesc,\n    typeImage: typeImage,\n    cardAtk: cardAtk,\n    cardDef: cardDef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Card.jsx"],"names":["useDrag","ItemTypes","CardCard","style","border","cursor","zIndex","height","padding","margin","Card","id","cardName","cardImage","cardRarity","cardType","cardMonster","cardDesc","typeImage","cardAtk","cardDef","playCard","isDragging","drag","type","CARD","item","end","monitor","dropResult","getDropResult","console","log","name","collect","handlerId","getHandlerId","opacity"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,iBADE;AAEVC,EAAAA,MAAM,EAAE,MAFE;AAGVC,EAAAA,MAAM,EAAE,EAHE;AAIVC,EAAAA,MAAM,EAAE,OAJE;AAKVC,EAAAA,OAAO,EAAE,CALC;AAMVC,EAAAA,MAAM,EAAE;AANE,CAAd;AAQA,OAAO,MAAMC,IAAI,GAAG,SAASA,IAAT,CAAc;AAC9BC,EAAAA,EAD8B;AAE9BC,EAAAA,QAF8B;AAG9BC,EAAAA,SAH8B;AAI9BC,EAAAA,UAJ8B;AAK9BC,EAAAA,QAL8B;AAM9BC,EAAAA,WAN8B;AAO9BC,EAAAA,QAP8B;AAQ9BC,EAAAA,SAR8B;AAS9BC,EAAAA,OAT8B;AAU9BC,EAAAA,OAV8B;AAW9BC,EAAAA;AAX8B,CAAd,EAYjB;AACC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBvB,OAAO,CAAC,OAAO;AAC1CwB,IAAAA,IAAI,EAAEvB,SAAS,CAACwB,IAD0B;AAE1CC,IAAAA,IAAI,EAAE;AAAEf,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAFoC;AAG1Ce,IAAAA,GAAG,EAAE,CAACD,IAAD,EAAOE,OAAP,KAAmB;AACpB,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;;AACA,UAAIJ,IAAI,IAAIG,UAAZ,EAAwB;AACpBR,QAAAA,QAAQ,CAACK,IAAI,CAACf,EAAN,CAAR;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAa,eAAcN,IAAI,CAACd,QAAS,SAAQiB,UAAU,CAACI,IAAK,GAAjE;AACH;AACJ,KATyC;AAU1CC,IAAAA,OAAO,EAAGN,OAAD,KAAc;AACnBN,MAAAA,UAAU,EAAEM,OAAO,CAACN,UAAR,EADO;AAEnBa,MAAAA,SAAS,EAAEP,OAAO,CAACQ,YAAR;AAFQ,KAAd;AAViC,GAAP,CAAD,CAAtC;AAeA,QAAMC,OAAO,GAAGf,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,IAAI,EAAC,MAArB;AAA4B,IAAA,KAAK,kCAAOpB,KAAP;AAAckC,MAAAA;AAAd,MAAjC;AAA0D,mBAAc,QAAOzB,QAAS,EAAxF;AAA2F,IAAA,OAAO,EAAE,MAAM;AAAEmB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,EAAZ;AAAiB,KAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AACI,IAAA,EAAE,EAAEA,EADR;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,SAAS,EAAEC,SAHf;AAII,IAAA,UAAU,EAAEC,UAJhB;AAKI,IAAA,QAAQ,EAAEC,QALd;AAMI,IAAA,WAAW,EAAEC,WANjB;AAOI,IAAA,QAAQ,EAAEC,QAPd;AAQI,IAAA,SAAS,EAAEC,SARf;AASI,IAAA,OAAO,EAAEC,OATb;AAUI,IAAA,OAAO,EAAEC,OAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAgBH,CA7CM","sourcesContent":["import { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport CardCard from '../cardCard/CardCard';\r\n\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    cursor: 'move',\r\n    zIndex: 10,\r\n    height: '150px',\r\n    padding: 0,\r\n    margin: 0\r\n};\r\nexport const Card = function Card({\r\n    id,\r\n    cardName,\r\n    cardImage,\r\n    cardRarity,\r\n    cardType,\r\n    cardMonster,\r\n    cardDesc,\r\n    typeImage,\r\n    cardAtk,\r\n    cardDef,\r\n    playCard\r\n}) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: ItemTypes.CARD,\r\n        item: { id, cardName },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                playCard(item.id)\r\n                console.log(`You dropped ${item.cardName} into ${dropResult.name}!`);\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n            handlerId: monitor.getHandlerId(),\r\n        }),\r\n    }));\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (\r\n        <div ref={drag} role=\"Card\" style={{ ...style, opacity }} data-testid={`card-${cardName}`} onClick={() => { console.log(id) }}>\r\n            <CardCard\r\n                id={id}\r\n                cardName={cardName}\r\n                cardImage={cardImage}\r\n                cardRarity={cardRarity}\r\n                cardType={cardType}\r\n                cardMonster={cardMonster}\r\n                cardDesc={cardDesc}\r\n                typeImage={typeImage}\r\n                cardAtk={cardAtk}\r\n                cardDef={cardDef}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}