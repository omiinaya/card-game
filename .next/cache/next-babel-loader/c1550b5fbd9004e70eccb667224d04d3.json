{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\n/* utils */\n\nimport { absoluteUrl } from '../middleware/utils';\nimport FormLogin from '../components/form/FormLogin';\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/* login schemas */\n\nconst FORM_DATA_LOGIN = {\n  email: {\n    value: '',\n    label: 'Email',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: emailRegEx,\n      error: 'Please insert valid email'\n    }\n  },\n  password: {\n    value: '',\n    label: 'Password',\n    min: 6,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid password'\n    }\n  }\n};\n\nfunction Login(props) {\n  const router = useRouter();\n  const {\n    origin,\n    referer,\n    baseApiUrl\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: stateFormData,\n    1: setStateFormData\n  } = useState(FORM_DATA_LOGIN);\n  const {\n    0: stateFormError,\n    1: setStateFormError\n  } = useState([]);\n  const {\n    0: stateFormValid,\n    1: setStateFormValid\n  } = useState(false);\n  const {\n    0: stateFormMessage,\n    1: setStateFormMessage\n  } = useState({});\n\n  function onChangeHandler(e) {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, {\n      [name]: _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n        value\n      })\n    }));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  async function onSubmitHandler(e) {\n    e.preventDefault();\n\n    let data = _objectSpread({}, stateFormData);\n    /* email */\n\n\n    data = _objectSpread(_objectSpread({}, data), {}, {\n      email: data.email.value || ''\n    });\n    /* password */\n\n    data = _objectSpread(_objectSpread({}, data), {}, {\n      password: data.password.value || ''\n    });\n    /* validation handler */\n\n    const isValid = validationHandler(stateFormData);\n\n    if (isValid) {\n      // Call an external API endpoint to get posts.\n      // You can use any data fetching library\n      setLoading(!loading);\n\n      async function login() {\n        const response = await fetch(`${baseApiUrl}/auth`, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        response.ok; // => false\n\n        response.status; // => 404\n\n        const text = await response.text();\n        return text;\n      }\n\n      login().then(result => {\n        console.log(result.json()); // => 'Page not found'\n\n        if (result.success && result.token) {\n          Cookies.set('token', result.token); // window.location.href = referer ? referer : \"/\";\n          // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\n\n          Router.push('/');\n        } else {\n          setStateFormMessage(result);\n        }\n      });\n      login();\n      /*\r\n      const loginApi = await fetch(`${baseApiUrl}/auth`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n        let result = await loginApi.json()\r\n      if (result.success && result.token) {\r\n        Cookies.set('token', result.token);\r\n        // window.location.href = referer ? referer : \"/\";\r\n        // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\r\n        Router.push('/');\r\n      } else {\r\n        setStateFormMessage(result);\r\n      }\r\n      */\n\n      setLoading(false);\n    }\n  }\n\n  function validationHandler(states, e) {\n    const input = e && e.target.name || '';\n    const errors = [];\n    let isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: `${states[e.target.name].label} required`,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: `Field ${states[input].label} min ${states[input].min}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: `Field ${states[input].label} max ${states[input].max}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(item => {\n        item.forEach(field => {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: `${field.label} required`,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: `Field ${field.label} min ${field.min}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: `Field ${field.label} max ${field.max}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back\")), __jsx(FormLogin, {\n    props: {\n      onSubmitHandler,\n      onChangeHandler,\n      loading,\n      stateFormData,\n      stateFormError,\n      stateFormMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  })));\n}\n/* getServerSideProps */\n\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  const referer = req.headers.referer || '';\n  const baseApiUrl = `${origin}/api`;\n  return {\n    props: {\n      origin,\n      referer,\n      baseApiUrl\n    }\n  };\n}\nexport default Login;","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/login.js"],"names":["React","useState","useEffect","Link","Router","useRouter","Cookies","absoluteUrl","FormLogin","emailRegEx","FORM_DATA_LOGIN","email","value","label","min","max","required","validator","regEx","error","password","Login","props","router","origin","referer","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormValid","setStateFormValid","stateFormMessage","setStateFormMessage","onChangeHandler","e","name","currentTarget","validationHandler","onSubmitHandler","preventDefault","data","isValid","login","response","fetch","method","headers","Accept","body","JSON","stringify","ok","status","text","then","result","console","log","json","success","token","set","push","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","pathname","getServerSideProps","context","req"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Cookies from 'js-cookie';\r\n\r\n/* utils */\r\nimport { absoluteUrl } from '../middleware/utils';\r\n\r\nimport FormLogin from '../components/form/FormLogin';\r\n\r\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n/* login schemas */\r\nconst FORM_DATA_LOGIN = {\r\n  email: {\r\n    value: '',\r\n    label: 'Email',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: emailRegEx,\r\n      error: 'Please insert valid email',\r\n    },\r\n  },\r\n  password: {\r\n    value: '',\r\n    label: 'Password',\r\n    min: 6,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid password',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Login(props) {\r\n  const router = useRouter();\r\n\r\n  const { origin, referer, baseApiUrl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_LOGIN);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* email */\r\n    data = { ...data, email: data.email.value || '' };\r\n    /* password */\r\n    data = { ...data, password: data.password.value || '' };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      // Call an external API endpoint to get posts.\r\n      // You can use any data fetching library\r\n      setLoading(!loading);\r\n\r\n      async function login() {\r\n        const response = await fetch(`${baseApiUrl}/auth`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        });\r\n\r\n        response.ok;     // => false\r\n        response.status; // => 404\r\n        const text = await response.text();\r\n        return text;\r\n      }\r\n      login().then(result => {\r\n        console.log(result.json()); // => 'Page not found'\r\n        if (result.success && result.token) {\r\n          Cookies.set('token', result.token);\r\n          // window.location.href = referer ? referer : \"/\";\r\n          // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\r\n          Router.push('/');\r\n        } else {\r\n          setStateFormMessage(result);\r\n        }\r\n      });\r\n\r\n      login()\r\n\r\n      /*\r\n      const loginApi = await fetch(`${baseApiUrl}/auth`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n      let result = await loginApi.json()\r\n      if (result.success && result.token) {\r\n        Cookies.set('token', result.token);\r\n        // window.location.href = referer ? referer : \"/\";\r\n        // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\r\n        Router.push('/');\r\n      } else {\r\n        setStateFormMessage(result);\r\n      }\r\n      */\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} min ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} max ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} min ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} max ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"content-detail\">\r\n        <Link\r\n          href={{\r\n            pathname: '/',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <FormLogin\r\n          props={{\r\n            onSubmitHandler,\r\n            onChangeHandler,\r\n            loading,\r\n            stateFormData,\r\n            stateFormError,\r\n            stateFormMessage,\r\n          }}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const referer = req.headers.referer || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      referer,\r\n      baseApiUrl,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}