{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize-8eb138058bc207616389312a81131e18dc89d783\\\\components\\\\cardManager\\\\CardManager.jsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useEffect, useState } from 'react';\nexport default function Album() {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n\n  async function test(props) {\n    const cardApi = await fetch(`/api/card`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    let result = await cardApi.json();\n    console.log(result.data);\n\n    if (result.success) {\n      setCards(result.data);\n    }\n  }\n\n  useEffect(() => {\n    test();\n  });\n  useEffect(() => {\n    console.log(cards);\n  }, [cards]);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Admin Panel\"))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      console.log(cards);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Main call to action\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Secondary action\"))), __jsx(Container, {\n    sx: {\n      py: 8\n    },\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, cards.map(card => __jsx(Grid, {\n    item: true,\n    key: card,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, __jsx(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, __jsx(CardMedia, {\n    component: \"img\",\n    sx: {\n      // 16:9\n      pt: '56.25%'\n    },\n    image: \"https://omiinaya.sirv.com/Images/placeholderCard.webp\",\n    alt: \"random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }), __jsx(CardContent, {\n    sx: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, \"Card Name\"), __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 41\n    }\n  }, \"This is a card card description.\")), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, \"Edit\"), __jsx(Button, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 41\n    }\n  }, \"Remove\")))))))));\n}","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize-8eb138058bc207616389312a81131e18dc89d783/components/cardManager/CardManager.jsx"],"names":["React","AppBar","Button","Card","CardActions","CardContent","CardMedia","Grid","Box","Toolbar","Typography","Container","useEffect","useState","Album","cards","setCards","test","props","cardApi","fetch","method","headers","Accept","catch","error","console","result","json","log","data","success","display","justifyContent","margin","py","map","card","height","flexDirection","pt","flexGrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useEffect, useState } from 'react';\n\n\nexport default function Album() {\n    const [cards, setCards] = useState([])\n\n    async function test(props) {\n        const cardApi = await fetch(`/api/card`, {\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n        }).catch(error => {\n            console.error('Error:', error);\n        });\n        let result = await cardApi.json()\n        console.log(result.data)\n        if (result.success) {\n            setCards(result.data)\n          }\n    }\n\n    useEffect(() => {\n        test()\n    });\n\n    useEffect(() => {\n        console.log(cards)\n    }, [cards]);\n\n    return (\n        <Box>\n            <AppBar position=\"relative\">\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        Admin Panel\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Box>\n                <div style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    margin: 10\n                }}>\n                    <Box>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={()=> {\n                                console.log(cards)\n                            }}\n                        >\n                            Main call to action\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Secondary action\n                        </Button>\n                    </Box>\n                </div>\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\n                    <Grid container spacing={4}>\n                        {cards.map((card) => (\n                            <Grid item key={card} xs={12} sm={6} md={4}>\n                                <Card\n                                    sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n                                >\n                                    <CardMedia\n                                        component=\"img\"\n                                        sx={{\n                                            // 16:9\n                                            pt: '56.25%',\n                                        }}\n                                        image=\"https://omiinaya.sirv.com/Images/placeholderCard.webp\"\n                                        alt=\"random\"\n                                    />\n                                    <CardContent sx={{ flexGrow: 1 }}>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            Card Name\n                                        </Typography>\n                                        <Typography>\n                                            This is a card card description.\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        <Button size=\"small\">Edit</Button>\n                                        <Button size=\"small\">Remove</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Container>\n            </Box>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}