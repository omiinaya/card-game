{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\user\\\\register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n/* utils */\n\n/* components */\nimport Layout from '../../components/layout/Layout';\nimport FormRegister from '../../components/form/FormRegister';\nvar emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/* register schemas */\n\nvar FORM_DATA_REGISTER = {\n  username: {\n    value: '',\n    label: 'Username',\n    min: 5,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Username fill correctly'\n    }\n  },\n  email: {\n    value: '',\n    label: 'Email',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: emailRegEx,\n      error: 'Email fill correctly'\n    }\n  },\n  password: {\n    value: '',\n    label: 'Password',\n    min: 5,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Password fill correctly'\n    }\n  }\n};\n\nfunction Register(props) {\n  _s();\n\n  var router = useRouter();\n  var origin = props.origin,\n      baseApiUrl = props.baseApiUrl;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(FORM_DATA_REGISTER),\n      stateFormData = _useState2[0],\n      setStateFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      stateFormError = _useState3[0],\n      setStateFormError = _useState3[1];\n\n  var _useState4 = useState(false),\n      stateFormValid = _useState4[0],\n      setStateFormValid = _useState4[1];\n\n  var _useState5 = useState({}),\n      stateFormMessage = _useState5[0],\n      setStateFormMessage = _useState5[1];\n\n  useEffect(function () {//console.log(stateFormData)\n  }, [stateFormData]);\n\n  function onChangeHandler(e) {\n    var _e$currentTarget = e.currentTarget,\n        name = _e$currentTarget.name,\n        value = _e$currentTarget.value;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n      value: value\n    }))));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  function onSubmitHandler(_x) {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var data, isValid, _isValid, isUser, loginApi, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              data = _objectSpread({}, stateFormData);\n              /* validation handler */\n\n              isValid = validationHandler(stateFormData);\n\n              if (!isValid) {\n                _context.next = 22;\n                break;\n              }\n\n              /* username */\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                username: data.username.value\n              });\n              /* email */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                email: data.email.value\n              });\n              /* password */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                password: data.password.value\n              });\n              /* validation handler */\n\n              _isValid = validationHandler(stateFormData);\n\n              if (!_isValid) {\n                _context.next = 22;\n                break;\n              }\n\n              // Call an external API endpoint to get posts.\n              // You can use any data fetching library\n              setLoading(!loading);\n              console.log(data);\n              _context.next = 13;\n              return fetch(\"\".concat(baseApiUrl, \"/user\")).then(function (response) {\n                return response.json;\n              }).then(function (res) {\n                console.log(res);\n              });\n\n            case 13:\n              isUser = _context.sent;\n              _context.next = 16;\n              return fetch(\"\".concat(baseApiUrl, \"/user\"), {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              })[\"catch\"](function (error) {\n                console.error('Error:', error);\n              });\n\n            case 16:\n              loginApi = _context.sent;\n              _context.next = 19;\n              return loginApi.json();\n\n            case 19:\n              result = _context.sent;\n\n              if (result.status === 'success' && result.message === 'done') {//window.location.href = '/';\n              } else {\n                setStateFormMessage(result);\n              }\n\n              setLoading(false);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function validationHandler(states, e) {\n    var input = e && e.target.name || '';\n    var errors = [];\n    var isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: \"\".concat(states[e.target.name].label, \" required\"),\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: \"Min \".concat(states[input].label, \" length \").concat(states[input].min),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: \"Min \".concat(states[input].label, \" length \").concat(states[input].max),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(function (item) {\n        item.forEach(function (field) {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: \"\".concat(field.label, \" required\"),\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Min \".concat(field.label, \" length \").concat(field.min),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Min \".concat(field.label, \" length \").concat(field.max),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | Register page\",\n    url: \"\".concat(origin).concat(router.asPath),\n    origin: origin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/user'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"\\u2190 Back\")), __jsx(FormRegister, {\n    props: {\n      onSubmitHandler: onSubmitHandler,\n      onChangeHandler: onChangeHandler,\n      loading: loading,\n      stateFormData: stateFormData,\n      stateFormError: stateFormError,\n      stateFormMessage: stateFormMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }))));\n}\n/* getServerSideProps */\n\n\n_s(Register, \"kqIXqnCXDpsBbdI4vVmXGMQsTGI=\", false, function () {\n  return [useRouter];\n});\n\n_c = Register;\nexport var __N_SSP = true;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/user/register.js"],"names":["React","useState","useEffect","Link","useRouter","Layout","FormRegister","emailRegEx","FORM_DATA_REGISTER","username","value","label","min","max","required","validator","regEx","error","email","password","Register","props","router","origin","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormValid","setStateFormValid","stateFormMessage","setStateFormMessage","onChangeHandler","e","currentTarget","name","validationHandler","onSubmitHandler","preventDefault","data","isValid","console","log","fetch","then","response","json","res","isUser","method","headers","Accept","body","JSON","stringify","loginApi","result","status","message","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","asPath","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\n/* utils */\r\nimport { absoluteUrl } from '../../middleware/utils';\r\n\r\n/* components */\r\nimport Layout from '../../components/layout/Layout';\r\nimport FormRegister from '../../components/form/FormRegister';\r\n\r\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n/* register schemas */\r\nconst FORM_DATA_REGISTER = {\r\n  username: {\r\n    value: '',\r\n    label: 'Username',\r\n    min: 5,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Username fill correctly',\r\n    },\r\n  },\r\n  email: {\r\n    value: '',\r\n    label: 'Email',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: emailRegEx,\r\n      error: 'Email fill correctly',\r\n    },\r\n  },\r\n  password: {\r\n    value: '',\r\n    label: 'Password',\r\n    min: 5,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Password fill correctly',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Register(props) {\r\n  const router = useRouter();\r\n  const { origin, baseApiUrl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_REGISTER);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n\r\n  useEffect(() => {\r\n    //console.log(stateFormData)\r\n  }, [stateFormData]);\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      /* username */\r\n      data = { ...data, username: data.username.value };\r\n      /* email */\r\n      data = { ...data, email: data.email.value };\r\n      /* password */\r\n      data = { ...data, password: data.password.value };\r\n\r\n      /* validation handler */\r\n      const isValid = validationHandler(stateFormData);\r\n\r\n      if (isValid) {\r\n        // Call an external API endpoint to get posts.\r\n        // You can use any data fetching library\r\n        setLoading(!loading);\r\n\r\n        console.log(data)\r\n\r\n        const isUser = await fetch(`${baseApiUrl}/user`)\r\n          .then((response) => {\r\n            return response.json\r\n          })\r\n          .then(function(res) {\r\n            console.log(res);\r\n          });\r\n\r\n        //need to execute this only after we know user with same email doesnt exist\r\n        const loginApi = await fetch(`${baseApiUrl}/user`, {\r\n          method: 'POST',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        }).catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n        let result = await loginApi.json();\r\n        if (result.status === 'success' && result.message === 'done') {\r\n          //window.location.href = '/';\r\n        } else {\r\n          setStateFormMessage(result);\r\n        }\r\n        setLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Min ${states[input].label} length ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Min ${states[input].label} length ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Min ${field.label} length ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Min ${field.label} length ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Next.js with Sequelize | Register page\"\r\n      url={`${origin}${router.asPath}`}\r\n      origin={origin}\r\n    >\r\n      <div className=\"container\">\r\n        <main className=\"content-detail\">\r\n          <Link\r\n            href={{\r\n              pathname: '/user',\r\n            }}\r\n          >\r\n            <a>&larr; Back</a>\r\n          </Link>\r\n          <FormRegister\r\n            props={{\r\n              onSubmitHandler,\r\n              onChangeHandler,\r\n              loading,\r\n              stateFormData,\r\n              stateFormError,\r\n              stateFormMessage,\r\n            }}\r\n          />\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const referer = req.headers.referer || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      baseApiUrl,\r\n      referer,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}