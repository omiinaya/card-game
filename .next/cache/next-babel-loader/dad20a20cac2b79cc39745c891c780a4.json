{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Box.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nvar style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  \"float\": 'left'\n};\nexport var Box = function Box(_ref) {\n  _s();\n\n  var name = _ref.name;\n\n  var _useDrag = useDrag(function () {\n    return {\n      type: ItemTypes.BOX,\n      item: {\n        name: name\n      },\n      end: function end(item, monitor) {\n        var dropResult = monitor.getDropResult();\n\n        if (item && dropResult) {\n          alert(\"You dropped \".concat(item.name, \" into \").concat(dropResult.name, \"!\"));\n        }\n      },\n      collect: function collect(monitor) {\n        return {\n          isDragging: monitor.isDragging(),\n          handlerId: monitor.getHandlerId()\n        };\n      }\n    };\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: drag,\n    role: \"Box\",\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      opacity: opacity\n    }),\n    \"data-testid\": \"box-\".concat(name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, name);\n};\n\n_s(Box, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Box.jsx"],"names":["useDrag","ItemTypes","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","Box","name","type","BOX","item","end","monitor","dropResult","getDropResult","alert","collect","isDragging","handlerId","getHandlerId","drag","opacity"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,iBADE;AAEVC,EAAAA,eAAe,EAAE,OAFP;AAGVC,EAAAA,OAAO,EAAE,aAHC;AAIVC,EAAAA,WAAW,EAAE,QAJH;AAKVC,EAAAA,YAAY,EAAE,QALJ;AAMVC,EAAAA,MAAM,EAAE,MANE;AAOV,WAAO;AAPG,CAAd;AASA,OAAO,IAAMC,GAAG,GAAG,SAASA,GAAT,OAAuB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,iBACPV,OAAO,CAAC;AAAA,WAAO;AAC1CW,MAAAA,IAAI,EAAEV,SAAS,CAACW,GAD0B;AAE1CC,MAAAA,IAAI,EAAE;AAAEH,QAAAA,IAAI,EAAJA;AAAF,OAFoC;AAG1CI,MAAAA,GAAG,EAAE,aAACD,IAAD,EAAOE,OAAP,EAAmB;AACpB,YAAMC,UAAU,GAAGD,OAAO,CAACE,aAAR,EAAnB;;AACA,YAAIJ,IAAI,IAAIG,UAAZ,EAAwB;AACpBE,UAAAA,KAAK,uBAAgBL,IAAI,CAACH,IAArB,mBAAkCM,UAAU,CAACN,IAA7C,OAAL;AACH;AACJ,OARyC;AAS1CS,MAAAA,OAAO,EAAE,iBAACJ,OAAD;AAAA,eAAc;AACnBK,UAAAA,UAAU,EAAEL,OAAO,CAACK,UAAR,EADO;AAEnBC,UAAAA,SAAS,EAAEN,OAAO,CAACO,YAAR;AAFQ,SAAd;AAAA;AATiC,KAAP;AAAA,GAAD,CADA;AAAA;AAAA,MAC7BF,UAD6B,gBAC7BA,UAD6B;AAAA,MACfG,IADe;;AAetC,MAAMC,OAAO,GAAGJ,UAAU,GAAG,GAAH,GAAS,CAAnC;AACA,SAAQ;AAAK,IAAA,GAAG,EAAEG,IAAV;AAAgB,IAAA,IAAI,EAAC,KAArB;AAA2B,IAAA,KAAK,kCAAOrB,KAAP;AAAcsB,MAAAA,OAAO,EAAPA;AAAd,MAAhC;AAAyD,iCAAoBd,IAApB,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRA,IADQ,CAAR;AAGH,CAnBM;;GAAMD,G;UACsBT,O;;;KADtBS,G","sourcesContent":["import { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'white',\r\n    padding: '0.5rem 1rem',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n};\r\nexport const Box = function Box({ name }) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: ItemTypes.BOX,\r\n        item: { name },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                alert(`You dropped ${item.name} into ${dropResult.name}!`);\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n            handlerId: monitor.getHandlerId(),\r\n        }),\r\n    }));\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (<div ref={drag} role=\"Box\" style={{ ...style, opacity }} data-testid={`box-${name}`}>\r\n\t\t\t{name}\r\n\t\t</div>);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}