{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nvar style = {\n  height: '30rem',\n  width: '100%',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: 'white',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  \"float\": 'left'\n};\nexport var Board = function Board() {\n  _s();\n\n  var _useDrop = useDrop(function () {\n    return {\n      accept: ItemTypes.BOX,\n      drop: function drop() {\n        return {\n          name: 'Board'\n        };\n      },\n      collect: function collect(monitor) {\n        return {\n          isOver: monitor.isOver(),\n          canDrop: monitor.canDrop()\n        };\n      }\n    };\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      canDrop = _useDrop2$.canDrop,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  var isActive = canDrop && isOver;\n  var backgroundColor = 'white';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return __jsx(\"div\", {\n    ref: drop,\n    role: 'Board',\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      backgroundColor: backgroundColor\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, isActive ? 'Release to drop' : 'Drag a box here');\n};\n\n_s(Board, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Board.jsx"],"names":["useDrop","ItemTypes","style","height","width","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","Board","accept","BOX","drop","name","collect","monitor","isOver","canDrop","isActive","backgroundColor"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,OADE;AAEVC,EAAAA,KAAK,EAAE,MAFG;AAGVC,EAAAA,WAAW,EAAE,QAHH;AAIVC,EAAAA,YAAY,EAAE,QAJJ;AAKVC,EAAAA,KAAK,EAAE,OALG;AAMVC,EAAAA,OAAO,EAAE,MANC;AAOVC,EAAAA,SAAS,EAAE,QAPD;AAQVC,EAAAA,QAAQ,EAAE,MARA;AASVC,EAAAA,UAAU,EAAE,QATF;AAUV,WAAO;AAVG,CAAd;AAYA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,iBACaZ,OAAO,CAAC;AAAA,WAAO;AAC/Ca,MAAAA,MAAM,EAAEZ,SAAS,CAACa,GAD6B;AAE/CC,MAAAA,IAAI,EAAE;AAAA,eAAO;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAP;AAAA,OAFyC;AAG/CC,MAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,eAAc;AACnBC,UAAAA,MAAM,EAAED,OAAO,CAACC,MAAR,EADW;AAEnBC,UAAAA,OAAO,EAAEF,OAAO,CAACE,OAAR;AAFU,SAAd;AAAA;AAHsC,KAAP;AAAA,GAAD,CADpB;AAAA;AAAA;AAAA,MACdA,OADc,cACdA,OADc;AAAA,MACLD,MADK,cACLA,MADK;AAAA,MACKJ,IADL;;AASvB,MAAMM,QAAQ,GAAGD,OAAO,IAAID,MAA5B;AACA,MAAIG,eAAe,GAAG,OAAtB;;AACA,MAAID,QAAJ,EAAc;AACVC,IAAAA,eAAe,GAAG,WAAlB;AACH,GAFD,MAGK,IAAIF,OAAJ,EAAa;AACdE,IAAAA,eAAe,GAAG,WAAlB;AACH;;AACD,SAAQ;AAAK,IAAA,GAAG,EAAEP,IAAV;AAAgB,IAAA,IAAI,EAAE,OAAtB;AAA+B,IAAA,KAAK,kCAAOb,KAAP;AAAcoB,MAAAA,eAAe,EAAfA;AAAd,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRD,QAAQ,GAAG,iBAAH,GAAuB,iBADvB,CAAR;AAGH,CApBM;;GAAMT,K;UAC2BZ,O;;;KAD3BY,K","sourcesContent":["import { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    height: '30rem',\r\n    width: '100%',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    color: 'white',\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal',\r\n    float: 'left',\r\n};\r\nexport const Board = () => {\r\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n        accept: ItemTypes.BOX,\r\n        drop: () => ({ name: 'Board' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n    const isActive = canDrop && isOver;\r\n    let backgroundColor = 'white';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    return (<div ref={drop} role={'Board'} style={{ ...style, backgroundColor }}>\r\n\t\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\r\n\t\t</div>);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}