{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize-8eb138058bc207616389312a81131e18dc89d783\\\\components\\\\cardManager\\\\CardManager.jsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useEffect, useState } from 'react';\nimport Card from '../card/card';\nimport axios from 'axios';\nexport default function Album() {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n\n  const getCards = () => {\n    axios.get(`/api/card`).then(res => {\n      setCards(res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    console.log(cards);\n  }, [cards]);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(AppBar, {\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Admin Panel\"))), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      console.log(cards);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Main call to action\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Secondary action\"))), __jsx(Container, {\n    sx: {\n      py: 8\n    },\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, cards.map((card, index) => __jsx(Grid, {\n    item: true,\n    key: card,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, __jsx(Card, {\n    cardName: cards[index].cardName,\n    cardImage: cards[index].cardImage,\n    cardRarity: cards[index].cardRarity,\n    cardMonster: cards[index].cardMonster,\n    cardDesc: cards[index].cardDesc,\n    cardAtk: cards[index].cardAtk,\n    cardDef: cards[index].cardDef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize-8eb138058bc207616389312a81131e18dc89d783/components/cardManager/CardManager.jsx"],"names":["React","AppBar","Button","CardActions","CardContent","CardMedia","Grid","Box","Toolbar","Typography","Container","useEffect","useState","Card","axios","Album","cards","setCards","getCards","get","then","res","data","console","log","display","justifyContent","margin","py","map","card","index","cardName","cardImage","cardRarity","cardMonster","cardDesc","cardAtk","cardDef"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useEffect, useState } from 'react';\nimport Card from '../card/card'\nimport axios from 'axios'\n\n\nexport default function Album() {\n    const [cards, setCards] = useState([])\n\n    const getCards = () => {\n        axios.get(`/api/card`)\n            .then(res => {\n                setCards(res.data.data)\n            })\n    }\n\n    useEffect(() => {\n        getCards()\n    }, []);\n\n    useEffect(() => {\n        console.log(cards)\n    }, [cards]);\n\n    return (\n        <Box>\n            <AppBar position=\"relative\">\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                        Admin Panel\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Box>\n                <div style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    margin: 10\n                }}>\n                    <Box>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => {\n                                console.log(cards)\n                            }}\n                        >\n                            Main call to action\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Secondary action\n                        </Button>\n                    </Box>\n                </div>\n                <Container sx={{ py: 8 }} maxWidth=\"md\">\n                    <Grid container spacing={4}>\n                        \n                        {cards.map((card, index) => (\n                            <Grid item key={card} xs={12} sm={6} md={4}>\n                                <Card \n                                    cardName={cards[index].cardName}\n                                    cardImage={cards[index].cardImage}\n                                    cardRarity={cards[index].cardRarity}\n                                    cardMonster={cards[index].cardMonster}\n                                    cardDesc={cards[index].cardDesc}\n                                    cardAtk={cards[index].cardAtk}\n                                    cardDef={cards[index].cardDef}\n                                />\n                            </Grid>\n                        ))}\n                        \n                    </Grid>\n                </Container>\n            </Box>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}