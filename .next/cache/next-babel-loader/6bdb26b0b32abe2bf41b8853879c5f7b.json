{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\post\\\\[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n/* utils */\n\nimport { absoluteUrl, getAppCookies } from '../../middleware/utils';\n/* components */\n\nimport Layout from '../../components/layout/Layout';\nimport FormPost from '../../components/form/FormPost';\n/* post schemas */\n\nconst FORM_DATA_POST = {\n  title: {\n    value: '',\n    label: 'Title',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Title'\n    }\n  },\n  content: {\n    value: '',\n    label: 'Content',\n    min: 6,\n    max: 1500,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Content'\n    }\n  }\n};\n\nfunction Post(props) {\n  const router = useRouter();\n  const {\n    origin,\n    post,\n    token\n  } = props;\n  const {\n    baseApiUrl\n  } = props;\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: stateFormData,\n    1: setStateFormData\n  } = useState(FORM_DATA_POST);\n  const {\n    0: stateFormError,\n    1: setStateFormError\n  } = useState([]);\n  const {\n    0: stateFormMessage,\n    1: setStateFormMessage\n  } = useState({});\n  const {\n    0: stateFormValid,\n    1: setStateFormValid\n  } = useState(false);\n\n  async function onSubmitHandler(e) {\n    e.preventDefault();\n\n    let data = _objectSpread({}, stateFormData);\n    /* email */\n\n\n    data = _objectSpread(_objectSpread({}, data), {}, {\n      title: data.title.value || ''\n    });\n    /* content */\n\n    data = _objectSpread(_objectSpread({}, data), {}, {\n      content: data.content.value || ''\n    });\n    /* validation handler */\n\n    const isValid = validationHandler(stateFormData);\n\n    if (isValid) {\n      // Call an external API endpoint to get posts.\n      // You can use any data fetching library\n      setLoading(!loading);\n      const postApi = await fetch(`${baseApiUrl}/post/[slug]`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          authorization: token || ''\n        },\n        body: JSON.stringify(data)\n      });\n      let result = await postApi.json();\n\n      if (result.message && result.data && result.message === 'done') {\n        router.push({\n          pathname: result.data.slug ? `/post/${result.data.slug}` : '/post'\n        });\n      } else {\n        setStateFormMessage(result);\n      }\n\n      setLoading(false);\n    }\n  }\n\n  function onChangeHandler(e) {\n    const {\n      name,\n      value\n    } = e.currentTarget;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, {\n      [name]: _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n        value\n      })\n    }));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  function validationHandler(states, e) {\n    const input = e && e.target.name || '';\n    const errors = [];\n    let isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: `${states[e.target.name].label} required`,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: `Field ${states[input].label} min ${states[input].min}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: `Field ${states[input].label} max ${states[input].max}`,\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(item => {\n        item.forEach(field => {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: `${field.label} required`,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: `Field ${field.label} min ${field.min}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: `Field ${field.label} max ${field.max}`,\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  function renderPostForm() {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: {\n        pathname: '/post'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(FormPost, {\n      onSubmit: onSubmitHandler,\n      onChange: onChangeHandler,\n      loading: loading,\n      stateFormData: stateFormData,\n      stateFormError: stateFormError,\n      stateFormValid: stateFormValid,\n      stateFormMessage: stateFormMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderPostList() {\n    return post.data ? __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/post'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(\"h2\", {\n      className: \"sub-title\",\n      style: {\n        display: 'block',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, post.data.title, __jsx(\"small\", {\n      style: {\n        display: 'block',\n        fontWeight: 'normal',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"Posted: \", post.data.createdAt)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, post.data.content), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }), \"By: \", post.data.user.firstName || '', \" \", post.data.user.lastName || '') : __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      class: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, \"Data Not Found\"));\n  }\n\n  return __jsx(Layout, {\n    title: `Next.js with Sequelize | Post Page - ${post.data && post.data.title}`,\n    url: `${origin}${router.asPath}`,\n    origin: origin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, router.asPath === '/post/add' ? renderPostForm() : renderPostList())));\n}\n/* getServerSideProps */\n\n\nexport async function getServerSideProps(context) {\n  const {\n    query,\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  const token = getAppCookies(req).token || '';\n  const baseApiUrl = `${origin}/api`;\n  let post = {};\n\n  if (query.slug !== 'add') {\n    const postApi = await fetch(`${baseApiUrl}/post/${query.slug}`);\n    post = await postApi.json();\n  }\n\n  return {\n    props: {\n      origin,\n      baseApiUrl,\n      post,\n      token\n    }\n  };\n}\nexport default Post;","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/post/[slug].js"],"names":["React","useState","Link","useRouter","absoluteUrl","getAppCookies","Layout","FormPost","FORM_DATA_POST","title","value","label","min","max","required","validator","regEx","error","content","Post","props","router","origin","post","token","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormMessage","setStateFormMessage","stateFormValid","setStateFormValid","onSubmitHandler","e","preventDefault","data","isValid","validationHandler","postApi","fetch","method","headers","Accept","authorization","body","JSON","stringify","result","json","message","push","pathname","slug","onChangeHandler","name","currentTarget","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","renderPostForm","renderPostList","display","marginTop","fontWeight","createdAt","user","firstName","lastName","asPath","getServerSideProps","context","query","req"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\n/* utils */\r\nimport { absoluteUrl, getAppCookies } from '../../middleware/utils';\r\n\r\n/* components */\r\nimport Layout from '../../components/layout/Layout';\r\nimport FormPost from '../../components/form/FormPost';\r\n\r\n/* post schemas */\r\nconst FORM_DATA_POST = {\r\n  title: {\r\n    value: '',\r\n    label: 'Title',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Title',\r\n    },\r\n  },\r\n  content: {\r\n    value: '',\r\n    label: 'Content',\r\n    min: 6,\r\n    max: 1500,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Content',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Post(props) {\r\n  const router = useRouter();\r\n\r\n  const { origin, post, token } = props;\r\n  const { baseApiUrl } = props;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_POST);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* email */\r\n    data = { ...data, title: data.title.value || '' };\r\n    /* content */\r\n    data = { ...data, content: data.content.value || '' };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      // Call an external API endpoint to get posts.\r\n      // You can use any data fetching library\r\n      setLoading(!loading);\r\n      const postApi = await fetch(`${baseApiUrl}/post/[slug]`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          authorization: token || '',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      let result = await postApi.json();\r\n      if (result.message && result.data && result.message === 'done') {\r\n        router.push({\r\n          pathname: result.data.slug ? `/post/${result.data.slug}` : '/post',\r\n        });\r\n      } else {\r\n        setStateFormMessage(result);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} min ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} max ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} min ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} max ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  function renderPostForm() {\r\n    return (\r\n      <>\r\n        <Link\r\n          href={{\r\n            pathname: '/post',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <FormPost\r\n          onSubmit={onSubmitHandler}\r\n          onChange={onChangeHandler}\r\n          loading={loading}\r\n          stateFormData={stateFormData}\r\n          stateFormError={stateFormError}\r\n          stateFormValid={stateFormValid}\r\n          stateFormMessage={stateFormMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderPostList() {\r\n    return post.data ? (\r\n      <div className=\"card\">\r\n        <Link\r\n          href={{\r\n            pathname: '/post',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <h2\r\n          className=\"sub-title\"\r\n          style={{\r\n            display: 'block',\r\n            marginTop: '.75rem',\r\n          }}\r\n        >\r\n          {post.data.title}\r\n          <small\r\n            style={{\r\n              display: 'block',\r\n              fontWeight: 'normal',\r\n              marginTop: '.75rem',\r\n            }}\r\n          >\r\n            Posted: {post.data.createdAt}\r\n          </small>\r\n        </h2>\r\n        <p>{post.data.content}</p>\r\n        <hr />\r\n        By: {post.data.user.firstName || ''} {post.data.user.lastName || ''}\r\n      </div>\r\n    ) : (\r\n      <div className=\"container\">\r\n        <div class=\"card\">Data Not Found</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title={`Next.js with Sequelize | Post Page - ${post.data &&\r\n        post.data.title}`}\r\n      url={`${origin}${router.asPath}`}\r\n      origin={origin}\r\n    >\r\n      <div className=\"container\">\r\n        <main className=\"content-detail\">\r\n          {router.asPath === '/post/add' ? renderPostForm() : renderPostList()}\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { query, req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const token = getAppCookies(req).token || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  let post = {};\r\n\r\n  if (query.slug !== 'add') {\r\n    const postApi = await fetch(`${baseApiUrl}/post/${query.slug}`);\r\n    post = await postApi.json();\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      baseApiUrl,\r\n      post,\r\n      token,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}