{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\job\\\\[slug].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n/* utils */\n\n/* components */\nimport Layout from '../../components/layout/Layout';\nimport FormJob from '../../components/form/FormJob';\n/* post schemas */\n\nvar FORM_DATA_JOB = {\n  title: {\n    value: '',\n    label: 'Title',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Title'\n    }\n  },\n  content: {\n    value: '',\n    label: 'Content',\n    min: 6,\n    max: 1500,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Content'\n    }\n  },\n  reportManager: {\n    value: '',\n    label: 'Content',\n    min: 6,\n    max: 1500,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Report Manager'\n    }\n  },\n  dateLimit: {\n    value: '',\n    label: 'Date',\n    min: 6,\n    max: 24,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Date limit'\n    }\n  }\n};\n\nfunction Job(props) {\n  _s();\n\n  var router = useRouter();\n  var origin = props.origin,\n      job = props.job,\n      token = props.token;\n  var baseApiUrl = props.baseApiUrl;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(FORM_DATA_JOB),\n      stateFormData = _useState2[0],\n      setStateFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      stateFormError = _useState3[0],\n      setStateFormError = _useState3[1];\n\n  var _useState4 = useState({}),\n      stateFormMessage = _useState4[0],\n      setStateFormMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      stateFormValid = _useState5[0],\n      setStateFormValid = _useState5[1];\n\n  function onSubmitHandler(_x) {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var data, isValid, jobApi, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              data = _objectSpread({}, stateFormData);\n              /* title */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                title: data.title.value || ''\n              });\n              /* content */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                content: data.content.value || ''\n              });\n              /* reportManager */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                reportManager: data.reportManager.value || ''\n              });\n              /* dateLimit */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                dateLimit: data.dateLimit.value || ''\n              });\n              /* validation handler */\n\n              isValid = validationHandler(stateFormData);\n\n              if (!isValid) {\n                _context.next = 17;\n                break;\n              }\n\n              // Call an external API endpoint to get posts.\n              // You can use any data fetching library\n              setLoading(!loading);\n              _context.next = 11;\n              return fetch(\"\".concat(baseApiUrl, \"/job/[slug]\"), {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  authorization: token || ''\n                },\n                body: JSON.stringify(data)\n              });\n\n            case 11:\n              jobApi = _context.sent;\n              _context.next = 14;\n              return jobApi.json();\n\n            case 14:\n              result = _context.sent;\n\n              if (result.status === 'success' && result.message && result.message === 'done' && result.data) {\n                router.push({\n                  pathname: result.data.slug ? \"/job/\".concat(result.data.slug) : '/job'\n                });\n              } else {\n                setStateFormMessage(result);\n              }\n\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function onChangeHandler(e) {\n    var _e$currentTarget = e.currentTarget,\n        name = _e$currentTarget.name,\n        value = _e$currentTarget.value;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n      value: value\n    }))));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  function validationHandler(states, e) {\n    var input = e && e.target.name || '';\n    var errors = [];\n    var isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: \"\".concat(states[e.target.name].label, \" required\"),\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" min \").concat(states[input].min),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" max \").concat(states[input].max),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(function (item) {\n        item.forEach(function (field) {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: \"\".concat(field.label, \" required\"),\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" min \").concat(field.min),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" max \").concat(field.max),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  function renderJobForm() {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: {\n        pathname: '/job'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(FormJob, {\n      onSubmit: onSubmitHandler,\n      onChange: onChangeHandler,\n      loading: loading,\n      stateFormData: stateFormData,\n      stateFormError: stateFormError,\n      stateFormValid: stateFormValid,\n      stateFormMessage: stateFormMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderJobList() {\n    return __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/job'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(\"h2\", {\n      className: \"sub-title\",\n      style: {\n        display: 'block',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }\n    }, job.data.title, __jsx(\"small\", {\n      style: {\n        display: 'block',\n        fontWeight: 'normal',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, \"Posted: \", job.data.createdAt)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }\n    }, job.data.content), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }\n    }, \"Email: \", job.data.emailTo), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }\n    }, \"Report to: \", job.data.reportManager), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }, \"Limit :\", job.data.dateLimit), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }), \"By: \", job.data.user.firstName || '', \" \", job.data.user.lastName || '');\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | Job Page - \".concat(job.data && job.data.title),\n    url: \"\".concat(origin).concat(router.asPath),\n    origin: origin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, router.asPath === '/job/add' ? renderJobForm() : renderJobList())));\n}\n/* getServerSideProps */\n\n\n_s(Job, \"cg8DXzjPh/fNGBhApL2cAC6VVXI=\", false, function () {\n  return [useRouter];\n});\n\n_c = Job;\nexport var __N_SSP = true;\nexport default Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/job/[slug].js"],"names":["React","useState","useEffect","Link","useRouter","Layout","FormJob","FORM_DATA_JOB","title","value","label","min","max","required","validator","regEx","error","content","reportManager","dateLimit","Job","props","router","origin","job","token","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormMessage","setStateFormMessage","stateFormValid","setStateFormValid","onSubmitHandler","e","preventDefault","data","isValid","validationHandler","fetch","method","headers","Accept","authorization","body","JSON","stringify","jobApi","json","result","status","message","push","pathname","slug","onChangeHandler","currentTarget","name","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","renderJobForm","renderJobList","display","marginTop","fontWeight","createdAt","emailTo","user","firstName","lastName","asPath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\n/* utils */\r\nimport { absoluteUrl, getAppCookies } from '../../middleware/utils';\r\n\r\n/* components */\r\nimport Layout from '../../components/layout/Layout';\r\nimport FormJob from '../../components/form/FormJob';\r\n\r\n/* post schemas */\r\nconst FORM_DATA_JOB = {\r\n  title: {\r\n    value: '',\r\n    label: 'Title',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Title',\r\n    },\r\n  },\r\n  content: {\r\n    value: '',\r\n    label: 'Content',\r\n    min: 6,\r\n    max: 1500,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Content',\r\n    },\r\n  },\r\n  reportManager: {\r\n    value: '',\r\n    label: 'Content',\r\n    min: 6,\r\n    max: 1500,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Report Manager',\r\n    },\r\n  },\r\n  dateLimit: {\r\n    value: '',\r\n    label: 'Date',\r\n    min: 6,\r\n    max: 24,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Date limit',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Job(props) {\r\n  const router = useRouter();\r\n\r\n  const { origin, job, token } = props;\r\n\r\n  const { baseApiUrl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_JOB);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* title */\r\n    data = { ...data, title: data.title.value || '' };\r\n    /* content */\r\n    data = { ...data, content: data.content.value || '' };\r\n    /* reportManager */\r\n    data = { ...data, reportManager: data.reportManager.value || '' };\r\n    /* dateLimit */\r\n    data = { ...data, dateLimit: data.dateLimit.value || '' };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      // Call an external API endpoint to get posts.\r\n      // You can use any data fetching library\r\n      setLoading(!loading);\r\n      const jobApi = await fetch(`${baseApiUrl}/job/[slug]`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          authorization: token || '',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      let result = await jobApi.json();\r\n      if (\r\n        result.status === 'success' &&\r\n        result.message &&\r\n        result.message === 'done' &&\r\n        result.data\r\n      ) {\r\n        router.push({\r\n          pathname: result.data.slug ? `/job/${result.data.slug}` : '/job',\r\n        });\r\n      } else {\r\n        setStateFormMessage(result);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} min ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} max ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} min ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} max ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  function renderJobForm() {\r\n    return (\r\n      <>\r\n        <Link\r\n          href={{\r\n            pathname: '/job',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <FormJob\r\n          onSubmit={onSubmitHandler}\r\n          onChange={onChangeHandler}\r\n          loading={loading}\r\n          stateFormData={stateFormData}\r\n          stateFormError={stateFormError}\r\n          stateFormValid={stateFormValid}\r\n          stateFormMessage={stateFormMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderJobList() {\r\n    return (\r\n      <div className=\"card\">\r\n        <Link\r\n          href={{\r\n            pathname: '/job',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <h2\r\n          className=\"sub-title\"\r\n          style={{\r\n            display: 'block',\r\n            marginTop: '.75rem',\r\n          }}\r\n        >\r\n          {job.data.title}\r\n          <small\r\n            style={{\r\n              display: 'block',\r\n              fontWeight: 'normal',\r\n              marginTop: '.75rem',\r\n            }}\r\n          >\r\n            Posted: {job.data.createdAt}\r\n          </small>\r\n        </h2>\r\n        <p>{job.data.content}</p>\r\n        <p>Email: {job.data.emailTo}</p>\r\n        <p>Report to: {job.data.reportManager}</p>\r\n        <p>Limit :{job.data.dateLimit}</p>\r\n        <hr />\r\n        By: {job.data.user.firstName || ''} {job.data.user.lastName || ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title={`Next.js with Sequelize | Job Page - ${job.data &&\r\n        job.data.title}`}\r\n      url={`${origin}${router.asPath}`}\r\n      origin={origin}\r\n    >\r\n      <div className=\"container\">\r\n        <main className=\"content-detail\">\r\n          {router.asPath === '/job/add' ? renderJobForm() : renderJobList()}\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { query, req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const token = getAppCookies(req).token || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  let job = {};\r\n\r\n  if (query.slug !== 'add') {\r\n    const jobApi = await fetch(`${baseApiUrl}/job/${query.slug}`);\r\n    job = await jobApi.json();\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      baseApiUrl,\r\n      job,\r\n      token,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Job;\r\n"]},"metadata":{},"sourceType":"module"}