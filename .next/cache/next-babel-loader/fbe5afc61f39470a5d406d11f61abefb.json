{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\PlayerHand.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport { Board } from './Board';\nimport { Box } from './Box';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst PlayerHand = memo(function Container() {\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n\n  const getCards = () => {\n    axios.get(`/api/card`).then(res => {\n      setCards(res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    console.log(cards);\n  }, [cards]);\n\n  const handleCardPlayed = index => {\n    console.log(index);\n    console.log(cards);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, cards.map((card, index) => __jsx(\"div\", {\n    key: card.cardName + index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"generated-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, __jsx(Box, {\n    id: index,\n    cardName: card.cardName,\n    cardImage: card.cardImage,\n    cardRarity: card.cardRarity,\n    cardType: card.cardType,\n    typeImage: card.typeImage,\n    cardDesc: card.cardDesc,\n    cardMonster: card.cardMonster,\n    cardAtk: card.cardATK,\n    cardDef: card.cardDEF,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }))))));\n});\nexport default PlayerHand;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/PlayerHand.jsx"],"names":["memo","Board","Box","axios","useEffect","useState","PlayerHand","Container","cards","setCards","getCards","get","then","res","data","console","log","handleCardPlayed","index","overflow","clear","map","card","cardName","cardImage","cardRarity","cardType","typeImage","cardDesc","cardMonster","cardATK","cardDEF"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,UAAU,GAAGN,IAAI,CAAC,SAASO,SAAT,GAAqB;AAEzC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,QAAQ,GAAG,MAAM;AACnBP,IAAAA,KAAK,CAACQ,GAAN,CAAW,WAAX,EAAuBC,IAAvB,CAA6BC,GAAD,IAAS;AACjCJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAR;AACH,KAFD;AAGH,GAJD;;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMS,gBAAgB,GAAIC,KAAD,IAAW;AAChCH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOJ,KAAP,KACP;AAAK,IAAA,GAAG,EAAEI,IAAI,CAACC,QAAL,GAAgBL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AACI,IAAA,EAAE,EAAEA,KADR;AAEI,IAAA,QAAQ,EAAEI,IAAI,CAACC,QAFnB;AAGI,IAAA,SAAS,EAAED,IAAI,CAACE,SAHpB;AAII,IAAA,UAAU,EAAEF,IAAI,CAACG,UAJrB;AAKI,IAAA,QAAQ,EAAEH,IAAI,CAACI,QALnB;AAMI,IAAA,SAAS,EAAEJ,IAAI,CAACK,SANpB;AAOI,IAAA,QAAQ,EAAEL,IAAI,CAACM,QAPnB;AAQI,IAAA,WAAW,EAAEN,IAAI,CAACO,WARtB;AASI,IAAA,OAAO,EAAEP,IAAI,CAACQ,OATlB;AAUI,IAAA,OAAO,EAAER,IAAI,CAACS,OAVlB;AAWI,IAAA,QAAQ,EAAEd,gBAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADH,CADL,CAJJ,CADJ;AA4BH,CAnDsB,CAAvB;AAqDA,eAAeX,UAAf","sourcesContent":["import { memo } from 'react';\r\nimport { Board } from './Board';\r\nimport { Box } from './Box';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [cards, setCards] = useState([]);\r\n\r\n    const getCards = () => {\r\n        axios.get(`/api/card`).then((res) => {\r\n            setCards(res.data.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(cards);\r\n    }, [cards]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        console.log(index)\r\n        console.log(cards)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Board />\r\n            </div>\r\n            <div className=\"cards\">\r\n                {cards.map((card, index) => (\r\n                    <div key={card.cardName + index}>\r\n                        <div className=\"generated-card\">\r\n                            <Box\r\n                                id={index}\r\n                                cardName={card.cardName}\r\n                                cardImage={card.cardImage}\r\n                                cardRarity={card.cardRarity}\r\n                                cardType={card.cardType}\r\n                                typeImage={card.typeImage}\r\n                                cardDesc={card.cardDesc}\r\n                                cardMonster={card.cardMonster}\r\n                                cardAtk={card.cardATK}\r\n                                cardDef={card.cardDEF}\r\n                                playCard={handleCardPlayed}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}