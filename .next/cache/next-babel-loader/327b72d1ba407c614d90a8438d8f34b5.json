{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Field.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nconst style = {\n  height: '250px',\n  width: '100%',\n  color: 'white',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  zIndex: 5,\n  position: 'absolute',\n  bottom: '150px',\n  backgroundColor: 'darkkhaki'\n};\nexport const Field = props => {\n  console.log(props.cards);\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: ItemTypes.CARD,\n    drop: () => ({\n      name: 'Field'\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  }\n\n  return __jsx(\"div\", {\n    ref: drop,\n    role: 'Field',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, isActive ? __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }\n  }, \"Release to drop\") : __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 63\n    }\n  }, \"Drag a box here\"), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"test\"));\n};\nexport default Field;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Field.jsx"],"names":["useDrop","ItemTypes","style","height","width","color","textAlign","fontSize","lineHeight","zIndex","position","bottom","backgroundColor","Field","props","console","log","cards","canDrop","isOver","drop","accept","CARD","name","collect","monitor","isActive"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,OADE;AAEVC,EAAAA,KAAK,EAAE,MAFG;AAGVC,EAAAA,KAAK,EAAE,OAHG;AAIVC,EAAAA,SAAS,EAAE,QAJD;AAKVC,EAAAA,QAAQ,EAAE,MALA;AAMVC,EAAAA,UAAU,EAAE,QANF;AAOVC,EAAAA,MAAM,EAAE,CAPE;AAQVC,EAAAA,QAAQ,EAAE,UARA;AASVC,EAAAA,MAAM,EAAE,OATE;AAUVC,EAAAA,eAAe,EAAE;AAVP,CAAd;AAYA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACA,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsBC,IAAtB,IAA8BpB,OAAO,CAAC,OAAO;AAC/CqB,IAAAA,MAAM,EAAEpB,SAAS,CAACqB,IAD6B;AAE/CF,IAAAA,IAAI,EAAE,OAAO;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAP,CAFyC;AAG/CC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBN,MAAAA,MAAM,EAAEM,OAAO,CAACN,MAAR,EADW;AAEnBD,MAAAA,OAAO,EAAEO,OAAO,CAACP,OAAR;AAFU,KAAd;AAHsC,GAAP,CAAD,CAA3C;AAQA,QAAMQ,QAAQ,GAAGR,OAAO,IAAIC,MAA5B;;AACA,MAAIO,QAAJ,EAAc;AACVd,IAAAA,eAAe,GAAG,WAAlB;AACH;;AACD,SACI;AAAK,IAAA,GAAG,EAAEQ,IAAV;AAAgB,IAAA,IAAI,EAAE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,QAAQ,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,GAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADtD,EAEI;AAAK,IAAA,KAAK,EAAE;AACRhB,MAAAA,QAAQ,EAAE,UADF;AAERC,MAAAA,MAAM,EAAE,CAFA;AAGRL,MAAAA,SAAS,EAAE,QAHH;AAIRF,MAAAA,KAAK,EAAE;AAJC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAaH,CA3BM;AA6BP,eAAeS,KAAf","sourcesContent":["import { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    height: '250px',\r\n    width: '100%',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontSize: '1rem',\r\n    lineHeight: 'normal',\r\n    zIndex: 5,\r\n    position: 'absolute',\r\n    bottom: '150px',\r\n    backgroundColor: 'darkkhaki'\r\n}\r\nexport const Field = (props) => {\r\n    console.log(props.cards)\r\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n        accept: ItemTypes.CARD,\r\n        drop: () => ({ name: 'Field' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n    const isActive = canDrop && isOver;\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    return (\r\n        <div ref={drop} role={'Field'}>\r\n            {isActive ? (<button>Release to drop</button>) : (<button>Drag a box here</button>)}\r\n            <div style={{\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                textAlign: 'center',\r\n                width: '100%'\r\n            }}>\r\n                test\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Field"]},"metadata":{},"sourceType":"module"}