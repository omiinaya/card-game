{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router, { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\n/* utils */\n\nimport FormLogin from '../components/form/FormLogin';\nvar emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/* login schemas */\n\nvar FORM_DATA_LOGIN = {\n  email: {\n    value: '',\n    label: 'Email',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: emailRegEx,\n      error: 'Please insert valid email'\n    }\n  },\n  password: {\n    value: '',\n    label: 'Password',\n    min: 6,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid password'\n    }\n  }\n};\n\nfunction Login(props) {\n  _s();\n\n  var router = useRouter();\n  var origin = props.origin,\n      referer = props.referer,\n      baseApiUrl = props.baseApiUrl;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(FORM_DATA_LOGIN),\n      stateFormData = _useState2[0],\n      setStateFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      stateFormError = _useState3[0],\n      setStateFormError = _useState3[1];\n\n  var _useState4 = useState(false),\n      stateFormValid = _useState4[0],\n      setStateFormValid = _useState4[1];\n\n  var _useState5 = useState({}),\n      stateFormMessage = _useState5[0],\n      setStateFormMessage = _useState5[1];\n\n  function onChangeHandler(e) {\n    var _e$currentTarget = e.currentTarget,\n        name = _e$currentTarget.name,\n        value = _e$currentTarget.value;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n      value: value\n    }))));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  function onSubmitHandler(_x) {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var data, isValid, loginApi;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              data = _objectSpread({}, stateFormData);\n              /* email */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                email: data.email.value || ''\n              });\n              /* password */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                password: data.password.value || ''\n              });\n              /* validation handler */\n\n              isValid = validationHandler(stateFormData);\n\n              if (!isValid) {\n                _context2.next = 11;\n                break;\n              }\n\n              // Call an external API endpoint to get posts.\n              // You can use any data fetching library\n              setLoading(!loading);\n              _context2.next = 9;\n              return fetch(\"\".concat(baseApiUrl, \"/auth\"), {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n              }).then(function (y) {\n                console.log(y);\n\n                var x = /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var result;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return loginApi.json();\n\n                          case 2:\n                            result = _context.sent;\n\n                            if (result.success && result.token) {\n                              Cookies.set('token', result.token); // window.location.href = referer ? referer : \"/\";\n                              // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\n\n                              Router.push('/');\n                            } else {\n                              setStateFormMessage(result);\n                            }\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function x() {\n                    return _ref.apply(this, arguments);\n                  };\n                }();\n              })[\"catch\"](function (error) {\n                console.error('Error:', error);\n              });\n\n            case 9:\n              loginApi = _context2.sent;\n              setLoading(false);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function validationHandler(states, e) {\n    var input = e && e.target.name || '';\n    var errors = [];\n    var isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: \"\".concat(states[e.target.name].label, \" required\"),\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" min \").concat(states[input].min),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" max \").concat(states[input].max),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(function (item) {\n        item.forEach(function (field) {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: \"\".concat(field.label, \" required\"),\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" min \").concat(field.min),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" max \").concat(field.max),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: '/'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back\")), __jsx(FormLogin, {\n    props: {\n      onSubmitHandler: onSubmitHandler,\n      onChangeHandler: onChangeHandler,\n      loading: loading,\n      stateFormData: stateFormData,\n      stateFormError: stateFormError,\n      stateFormMessage: stateFormMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  })));\n}\n/* getServerSideProps */\n\n\n_s(Login, \"H74yycDbrUKBie4ozDraexj/joM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Login;\nexport var __N_SSP = true;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/login.js"],"names":["React","useState","useEffect","Link","Router","useRouter","Cookies","FormLogin","emailRegEx","FORM_DATA_LOGIN","email","value","label","min","max","required","validator","regEx","error","password","Login","props","router","origin","referer","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormValid","setStateFormValid","stateFormMessage","setStateFormMessage","onChangeHandler","e","currentTarget","name","validationHandler","onSubmitHandler","preventDefault","data","isValid","fetch","method","headers","Accept","body","JSON","stringify","then","y","console","log","x","loginApi","json","result","success","token","set","push","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","pathname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Router, { useRouter } from 'next/router';\r\nimport Cookies from 'js-cookie';\r\n\r\n/* utils */\r\nimport { absoluteUrl } from '../middleware/utils';\r\n\r\nimport FormLogin from '../components/form/FormLogin';\r\n\r\nconst emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,2|3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n/* login schemas */\r\nconst FORM_DATA_LOGIN = {\r\n  email: {\r\n    value: '',\r\n    label: 'Email',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: emailRegEx,\r\n      error: 'Please insert valid email',\r\n    },\r\n  },\r\n  password: {\r\n    value: '',\r\n    label: 'Password',\r\n    min: 6,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid password',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Login(props) {\r\n  const router = useRouter();\r\n\r\n  const { origin, referer, baseApiUrl } = props;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_LOGIN);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* email */\r\n    data = { ...data, email: data.email.value || '' };\r\n    /* password */\r\n    data = { ...data, password: data.password.value || '' };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      // Call an external API endpoint to get posts.\r\n      // You can use any data fetching library\r\n      setLoading(!loading);\r\n      const loginApi = await fetch(`${baseApiUrl}/auth`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      }).then((y) => {\r\n        console.log(y)\r\n        const x = async function () {\r\n          let result = await loginApi.json()\r\n          if (result.success && result.token) {\r\n            Cookies.set('token', result.token);\r\n            // window.location.href = referer ? referer : \"/\";\r\n            // const pathUrl = referer ? referer.lastIndexOf(\"/\") : \"/\";\r\n            Router.push('/');\r\n          } else {\r\n            setStateFormMessage(result);\r\n          }\r\n        }\r\n      }).catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} min ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} max ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} min ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} max ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"content-detail\">\r\n        <Link\r\n          href={{\r\n            pathname: '/',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <FormLogin\r\n          props={{\r\n            onSubmitHandler,\r\n            onChangeHandler,\r\n            loading,\r\n            stateFormData,\r\n            stateFormError,\r\n            stateFormMessage,\r\n          }}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const referer = req.headers.referer || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      referer,\r\n      baseApiUrl,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}