{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport Field from './Field';\nimport Hand from './Hand';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nvar PlayerHand = memo(_c = _s(function Container() {\n  _s();\n\n  var _useState = useState([]),\n      onHand = _useState[0],\n      setOnHand = _useState[1];\n\n  var _useState2 = useState([]),\n      onField = _useState2[0],\n      setOnField = _useState2[1];\n\n  var getCards = function getCards() {\n    //if onHand have not loaded yet then load them from server.\n    if (onHand.length === 0) {\n      axios.get(\"/api/card\").then(function (res) {\n        var hand = res.data.data.sort(function () {\n          return Math.random() - Math.random();\n        }).slice(0, 10);\n        setOnHand(hand);\n      });\n    }\n  };\n\n  useEffect(function () {\n    getCards();\n  }, []);\n  useEffect(function () {\n    sortOnHand();\n    console.log(onHand);\n  }, [onHand]);\n  useEffect(function () {\n    //sortOnField()\n    console.log(onField);\n  }, [onField]);\n\n  var handleCardPlayed = function handleCardPlayed(index) {\n    setOnHand(function (prev) {\n      return prev.filter(function (card) {\n        return card.id != index - 1;\n      });\n    });\n    setOnField(function (prevArray) {\n      return [].concat(_toConsumableArray(prevArray), [onHand.filter(function (card) {\n        return card.id == index - 1;\n      })[0]]);\n    });\n  };\n\n  var sortOnHand = function sortOnHand() {\n    var myArray = onHand;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  var sortOnField = function sortOnField() {\n    var myArray = onField;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    cards: onField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Hand, {\n    cards: onHand,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n}, \"04N5cuwtClScjwx/b2x8cjPT0SQ=\"));\n_c2 = PlayerHand;\nexport default PlayerHand;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerHand$memo\");\n$RefreshReg$(_c2, \"PlayerHand\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Board.jsx"],"names":["memo","Field","Hand","axios","useEffect","useState","PlayerHand","Container","onHand","setOnHand","onField","setOnField","getCards","length","get","then","res","hand","data","sort","Math","random","slice","sortOnHand","console","log","handleCardPlayed","index","prev","filter","card","id","prevArray","myArray","forEach","element","sortOnField","overflow","clear"],"mappings":"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","sourcesContent":["import { memo } from 'react';\r\nimport Field from './Field';\r\nimport Hand from './Hand';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [onHand, setOnHand] = useState([])\r\n    const [onField, setOnField] = useState([])\r\n\r\n    const getCards = () => {\r\n        //if onHand have not loaded yet then load them from server.\r\n        if (onHand.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                let hand = res.data.data.sort(() => Math.random() - Math.random()).slice(0, 10)\r\n                setOnHand(hand);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortOnHand()\r\n        console.log(onHand)\r\n    }, [onHand]);\r\n\r\n    useEffect(() => {\r\n        //sortOnField()\r\n        console.log(onField)\r\n    }, [onField]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        setOnHand(prev => prev.filter(card => card.id != index - 1))\r\n        setOnField(prevArray => [...prevArray, onHand.filter(card => card.id == index - 1)[0]])\r\n    }\r\n\r\n    const sortOnHand = () => {\r\n        var myArray = onHand\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    const sortOnField = () => {\r\n        var myArray = onField\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Field cards={onField}/>\r\n            </div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Hand cards={onHand} playCard={handleCardPlayed} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}