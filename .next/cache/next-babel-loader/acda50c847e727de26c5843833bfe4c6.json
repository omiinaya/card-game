{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../models/index');\n\nconst handler = nextConnect() // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n  const cards = await models.cards.findAndCountAll({\n    offset: nextPage ? +nextPage : 0\n  });\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: cards.rows,\n    total: cards.count,\n    nextPage: +nextPage + 5\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    cardName,\n    cardRarity,\n    cardImage,\n    cardDesc,\n    cardType,\n    cardATK,\n    cardDEF,\n    cardMonster,\n    typeImage\n  } = body;\n  const newCard = await models.cards.create({\n    cardName,\n    cardRarity,\n    cardImage,\n    cardDesc,\n    cardType,\n    cardATK,\n    cardDEF,\n    cardMonster,\n    typeImage,\n    status: 1\n  });\n  return res.status(200).json({\n    status: 'success',\n    message: 'done',\n    data: newCard\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/pages/api/card/index.js"],"names":["nextConnect","models","require","handler","get","req","res","query","nextPage","method","body","cards","findAndCountAll","offset","statusCode","json","status","data","rows","total","count","post","cardName","cardRarity","cardImage","cardDesc","cardType","cardATK","cardDEF","cardMonster","typeImage","newCard","create","message"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAGH,WAAW,GACzB;AADyB,CAExBI,GAFa,CAET,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;AAMA,QAAMM,KAAK,GAAG,MAAMV,MAAM,CAACU,KAAP,CAAaC,eAAb,CAA6B;AAC/CC,IAAAA,MAAM,EAAEL,QAAQ,GAAG,CAACA,QAAJ,GAAe;AADgB,GAA7B,CAApB;AAIAF,EAAAA,GAAG,CAACQ,UAAJ,GAAiB,GAAjB;AACAR,EAAAA,GAAG,CAACS,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,IAAI,EAAEN,KAAK,CAACO,IAFL;AAGPC,IAAAA,KAAK,EAAER,KAAK,CAACS,KAHN;AAIPZ,IAAAA,QAAQ,EAAE,CAACA,QAAD,GAAY;AAJf,GAAT;AAMD,CApBa,EAsBd;AAtBc,CAuBba,IAvBa,CAuBR,OAAOhB,GAAP,EAAYC,GAAZ,KAAoB;AACxB,QAAM;AAAEI,IAAAA;AAAF,MAAWL,GAAjB;AACA,QAAM;AACJiB,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA;AATI,MAUFpB,IAVJ;AAWA,QAAMqB,OAAO,GAAG,MAAM9B,MAAM,CAACU,KAAP,CAAaqB,MAAb,CAAoB;AACxCV,IAAAA,QADwC;AAExCC,IAAAA,UAFwC;AAGxCC,IAAAA,SAHwC;AAIxCC,IAAAA,QAJwC;AAKxCC,IAAAA,QALwC;AAMxCC,IAAAA,OANwC;AAOxCC,IAAAA,OAPwC;AAQxCC,IAAAA,WARwC;AASxCC,IAAAA,SATwC;AAUxCd,IAAAA,MAAM,EAAE;AAVgC,GAApB,CAAtB;AAYA,SAAOV,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,IAAAA,MAAM,EAAE,SADkB;AAE1BiB,IAAAA,OAAO,EAAE,MAFiB;AAG1BhB,IAAAA,IAAI,EAAEc;AAHoB,GAArB,CAAP;AAKD,CArDa,CAAhB;AAuDA,eAAe5B,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../models/index');\r\n\r\nconst handler = nextConnect()\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { nextPage },\r\n      method,\r\n      body,\r\n    } = req;\r\n\r\n    const cards = await models.cards.findAndCountAll({\r\n      offset: nextPage ? +nextPage : 0,\r\n    });\r\n\r\n    res.statusCode = 200;\r\n    res.json({\r\n      status: 'success',\r\n      data: cards.rows,\r\n      total: cards.count,\r\n      nextPage: +nextPage + 5,\r\n    });\r\n  })\r\n\r\n  // Post method\r\n  .post(async (req, res) => {\r\n    const { body } = req;\r\n    const {\r\n      cardName,\r\n      cardRarity,\r\n      cardImage,\r\n      cardDesc,\r\n      cardType,\r\n      cardATK,\r\n      cardDEF,\r\n      cardMonster,\r\n      typeImage\r\n    } = body;\r\n    const newCard = await models.cards.create({\r\n      cardName,\r\n      cardRarity,\r\n      cardImage,\r\n      cardDesc,\r\n      cardType,\r\n      cardATK,\r\n      cardDEF,\r\n      cardMonster,\r\n      typeImage,\r\n      status: 1,\r\n    });\r\n    return res.status(200).json({\r\n      status: 'success',\r\n      message: 'done',\r\n      data: newCard,\r\n    });\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}