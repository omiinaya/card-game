{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useEffect, useState } from \"react\";\nvar finalSpaceCharacters = [{\n  id: 'gary',\n  name: 'Gary Goodspeed'\n}, {\n  id: 'cato',\n  name: 'Little Cato'\n}, {\n  id: 'kvn',\n  name: 'KVN'\n}, {\n  id: 'mooncake',\n  name: 'Mooncake'\n}, {\n  id: 'quinn',\n  name: 'Quinn Ergon'\n}];\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(finalSpaceCharacters),\n      characters = _useState[0],\n      updateCharacters = _useState[1];\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    var items = Array.from(characters);\n\n    var _items$splice = items.splice(result.source.index, 1),\n        _items$splice2 = _slicedToArray(_items$splice, 1),\n        reorderedItem = _items$splice2[0];\n\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateCharacters(items);\n  }\n\n  return __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, function (provided) {\n    return __jsx(\"ul\", _extends({\n      className: \"characters\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), characters.map(function (_ref, index) {\n      var id = _ref.id,\n          name = _ref.name;\n      return __jsx(Draggable, {\n        key: id,\n        draggableId: id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, function (provided) {\n        return __jsx(\"li\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }\n        }), __jsx(\"div\", {\n          className: \"characters-thumb\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }\n        }, name));\n      });\n    }), provided.placeholder);\n  }), __jsx(Droppable, {\n    droppableId: \"characters-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, function (provided) {\n    return __jsx(\"ul\", _extends({\n      className: \"characters-2\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), characters.map(function (_ref2, index) {\n      var id = _ref2.id,\n          name = _ref2.name;\n      return __jsx(Draggable, {\n        key: id,\n        draggableId: id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, function (provided) {\n        return __jsx(\"li\", _extends({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }\n        }), __jsx(\"div\", {\n          className: \"characters-thumb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 45\n          }\n        }, name));\n      });\n    }), provided.placeholder);\n  }));\n}\n\n_s(App, \"3ryvh8y07JqnTCXYyN9CPsDJJ2w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Board.jsx"],"names":["DragDropContext","Droppable","Draggable","useEffect","useState","finalSpaceCharacters","id","name","App","characters","updateCharacters","handleOnDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst finalSpaceCharacters = [\r\n    {\r\n        id: 'gary',\r\n        name: 'Gary Goodspeed'\r\n    },\r\n    {\r\n        id: 'cato',\r\n        name: 'Little Cato'\r\n    },\r\n    {\r\n        id: 'kvn',\r\n        name: 'KVN'\r\n    },\r\n    {\r\n        id: 'mooncake',\r\n        name: 'Mooncake'\r\n    },\r\n    {\r\n        id: 'quinn',\r\n        name: 'Quinn Ergon'\r\n    }\r\n]\r\n\r\nfunction App() {\r\n    const [characters, updateCharacters] = useState(finalSpaceCharacters);\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(characters);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updateCharacters(items);\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"characters\">\r\n                {(provided) => (\r\n                    <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {characters.map(({ id, name }, index) => {\r\n                            return (\r\n                                <Draggable key={id} draggableId={id} index={index}>\r\n                                    {(provided) => (\r\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                            <div className=\"characters-thumb\">\r\n                                                {name}\r\n                                            </div>\r\n                                        </li>\r\n                                    )}\r\n                                </Draggable>\r\n                            );\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n            <Droppable droppableId=\"characters-2\">\r\n                {(provided) => (\r\n                    <ul className=\"characters-2\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {characters.map(({ id, name }, index) => {\r\n                            return (\r\n                                <Draggable key={id} draggableId={id} index={index}>\r\n                                    {(provided) => (\r\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                            <div className=\"characters-thumb-2\">\r\n                                                {name}\r\n                                            </div>\r\n                                        </li>\r\n                                    )}\r\n                                </Draggable>\r\n                            );\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}