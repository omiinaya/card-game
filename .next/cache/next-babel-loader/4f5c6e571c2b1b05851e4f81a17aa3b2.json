{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Box.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDrag } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nconst style = {\n  border: '1px dashed gray',\n  cursor: 'move',\n  zIndex: 10\n};\nexport const Box = function Box({\n  id,\n  cardName,\n  cardImage,\n  cardRarity,\n  cardType,\n  cardMonster,\n  cardDesc,\n  typeImage,\n  cardAtk,\n  cardDef,\n  playCard\n}) {\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.BOX,\n    item: {\n      id\n    },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n\n      if (item && dropResult) {\n        console.log(item);\n        playCard(item.id); //console.log(`You dropped ${item.cardName} into ${dropResult.name}!`);\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      handlerId: monitor.getHandlerId()\n    })\n  }));\n  const opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: drag,\n    role: \"Box\",\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      opacity\n    }),\n    \"data-testid\": `box-${cardName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    id: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    id: \"cardTemplate\",\n    src: \"https://i.ibb.co/mG6jvpR/monster-normal.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), __jsx(\"img\", {\n    id: \"cardFace\",\n    src: cardImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), __jsx(\"img\", {\n    id: \"starLevel\",\n    src: \"https://i.ibb.co/M1bYC6V/star.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    id: \"cardTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, cardName), __jsx(\"img\", {\n    id: \"cardType\",\n    src: typeImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(\"h4\", {\n    id: \"monsterType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"[\", cardMonster, \"]\"), __jsx(\"div\", {\n    id: \"monsterDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, cardDesc), __jsx(\"div\", {\n    id: \"monsterAtk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, cardAtk), __jsx(\"div\", {\n    id: \"monsterDef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, cardDef))));\n};","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Box.jsx"],"names":["useDrag","ItemTypes","style","border","cursor","zIndex","Box","id","cardName","cardImage","cardRarity","cardType","cardMonster","cardDesc","typeImage","cardAtk","cardDef","playCard","isDragging","drag","type","BOX","item","end","monitor","dropResult","getDropResult","console","log","collect","handlerId","getHandlerId","opacity"],"mappings":"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","sourcesContent":["import { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    \r\n    border: '1px dashed gray',\r\n    cursor: 'move',\r\n    zIndex: 10\r\n};\r\nexport const Box = function Box({\r\n    id,\r\n    cardName,\r\n    cardImage,\r\n    cardRarity,\r\n    cardType,\r\n    cardMonster,\r\n    cardDesc,\r\n    typeImage,\r\n    cardAtk,\r\n    cardDef,\r\n    playCard\r\n}) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: ItemTypes.BOX,\r\n        item: { id },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                console.log(item)\r\n                playCard(item.id)\r\n                //console.log(`You dropped ${item.cardName} into ${dropResult.name}!`);\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n            handlerId: monitor.getHandlerId(),\r\n        }),\r\n    }));\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (<div ref={drag} role=\"Box\" style={{ ...style, opacity }} data-testid={`box-${cardName}`}>\r\n        <div>\r\n            <link\r\n                href=\"https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap\"\r\n                rel=\"stylesheet\"\r\n            />\r\n            <div id=\"cardContainer\">\r\n                <img\r\n                    id=\"cardTemplate\"\r\n                    src=\"https://i.ibb.co/mG6jvpR/monster-normal.png\"\r\n                />\r\n                <img\r\n                    id=\"cardFace\"\r\n                    src={cardImage} />\r\n                <img\r\n                    id=\"starLevel\"\r\n                    src=\"https://i.ibb.co/M1bYC6V/star.png\"\r\n                />\r\n                <div id=\"cardTitle\">{cardName}</div>\r\n                <img id=\"cardType\" src={typeImage} />\r\n                <h4 id=\"monsterType\">[{cardMonster}]</h4>\r\n                <div id=\"monsterDescription\">{cardDesc}</div>\r\n                <div id=\"monsterAtk\">{cardAtk}</div>\r\n                <div id=\"monsterDef\">{cardDef}</div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}