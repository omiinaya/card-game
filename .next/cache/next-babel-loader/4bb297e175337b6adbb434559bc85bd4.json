{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport Field from './Field';\nimport Hand from './Hand';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nvar PlayerHand = memo(_c = _s(function Container() {\n  _s();\n\n  var _useState = useState([]),\n      onHand = _useState[0],\n      setOnHand = _useState[1];\n\n  var _useState2 = useState([]),\n      onField = _useState2[0],\n      setOnField = _useState2[1];\n\n  var getCards = function getCards() {\n    //if cards have not loaded yet then load them from server.\n    if (onHand.length === 0) {\n      axios.get(\"/api/card\").then(function (res) {\n        setOnHand(res.data.data);\n      });\n    }\n  };\n\n  useEffect(function () {\n    getCards();\n  }, []);\n  useEffect(function () {\n    sortCardIds();\n  }, [onHand]);\n  useEffect(function () {\n    console.log(onField);\n  }, [onField]);\n\n  var handleCardPlayed = function handleCardPlayed(index) {\n    setOnField(function (prev) {\n      return prev.push(onHand.filter(function (card) {\n        return card.id == index - 1;\n      }));\n    });\n    setOnHand(function (prev) {\n      return prev.filter(function (card) {\n        return card.id != index - 1;\n      });\n    });\n  };\n\n  var playerAction = function playerAction() {\n    console.log(onField);\n  };\n\n  var sortCardIds = function sortCardIds() {\n    var myArray = onHand;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    cards: onField,\n    playerAction: playerAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(Hand, {\n    cards: onHand,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })));\n}, \"04N5cuwtClScjwx/b2x8cjPT0SQ=\"));\n_c2 = PlayerHand;\nexport default PlayerHand;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayerHand$memo\");\n$RefreshReg$(_c2, \"PlayerHand\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Board.jsx"],"names":["memo","Field","Hand","axios","useEffect","useState","PlayerHand","Container","onHand","setOnHand","onField","setOnField","getCards","length","get","then","res","data","sortCardIds","console","log","handleCardPlayed","index","prev","push","filter","card","id","playerAction","myArray","forEach","element","overflow","clear"],"mappings":"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","sourcesContent":["import { memo } from 'react';\r\nimport Field from './Field';\r\nimport Hand from './Hand';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [onHand, setOnHand] = useState([]);\r\n    const [onField, setOnField] = useState([]);\r\n\r\n    const getCards = () => {\r\n        //if cards have not loaded yet then load them from server.\r\n        if (onHand.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                setOnHand(res.data.data);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortCardIds();\r\n    }, [onHand]);\r\n\r\n    useEffect(() => {\r\n        console.log(onField)\r\n    }, [onField]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        setOnField(prev => prev.push(onHand.filter(card => card.id == index - 1)\r\n        ))\r\n        \r\n        setOnHand(prev => prev.filter(card => {\r\n            return card.id != index - 1\r\n        }))\r\n        \r\n    }\r\n\r\n    const playerAction = () => {\r\n        console.log(onField)\r\n    }\r\n\r\n    const sortCardIds = () => {\r\n        var myArray = onHand\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Field cards={onField} playerAction={playerAction}/>\r\n            </div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Hand cards={onHand} playCard={handleCardPlayed}/>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}