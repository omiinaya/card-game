{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Board.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useEffect, useState } from \"react\";\nconst finalSpaceCharacters = [{\n  id: 'gary',\n  name: 'Gary Goodspeed'\n}, {\n  id: 'cato',\n  name: 'Little Cato'\n}, {\n  id: 'kvn',\n  name: 'KVN'\n}, {\n  id: 'mooncake',\n  name: 'Mooncake'\n}, {\n  id: 'quinn',\n  name: 'Quinn Ergon'\n}];\n\nfunction App() {\n  const {\n    0: characters,\n    1: updateCharacters\n  } = useState(finalSpaceCharacters);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    updateCharacters(items);\n  }\n\n  return __jsx(DragDropContext, {\n    onDragEnd: handleOnDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Droppable, {\n    droppableId: \"characters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, provided => __jsx(\"ul\", _extends({\n    className: \"characters\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), characters.map(({\n    id,\n    name\n  }, index) => {\n    return __jsx(Draggable, {\n      key: id,\n      draggableId: id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, provided => __jsx(\"li\", _extends({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 41\n      }\n    }), __jsx(\"div\", {\n      className: \"characters-thumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }\n    }, name)));\n  }), provided.placeholder)), __jsx(Droppable, {\n    droppableId: \"characters-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(Draggable, {\n    draggableId: 1,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"characters-thumb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, 'test')))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Board.jsx"],"names":["DragDropContext","Droppable","Draggable","useEffect","useState","finalSpaceCharacters","id","name","App","characters","updateCharacters","handleOnDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","provided","droppableProps","innerRef","map","draggableProps","dragHandleProps","placeholder"],"mappings":";;;;;;AAAA,SAASA,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,oBAAoB,GAAG,CACzB;AACIC,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADyB,EAKzB;AACID,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALyB,EASzB;AACID,EAAAA,EAAE,EAAE,KADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CATyB,EAazB;AACID,EAAAA,EAAE,EAAE,UADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAbyB,EAiBzB;AACID,EAAAA,EAAE,EAAE,OADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAjByB,CAA7B;;AAuBA,SAASC,GAAT,GAAe;AACX,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAAiCN,QAAQ,CAACC,oBAAD,CAA/C;;AAEA,WAASM,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,UAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWP,UAAX,CAAd;AACA,UAAM,CAACQ,aAAD,IAAkBH,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACO,MAAP,CAAcC,KAA3B,EAAkC,CAAlC,CAAxB;AACAN,IAAAA,KAAK,CAACI,MAAN,CAAaN,MAAM,CAACC,WAAP,CAAmBO,KAAhC,EAAuC,CAAvC,EAA0CH,aAA1C;AAEAP,IAAAA,gBAAgB,CAACI,KAAD,CAAhB;AACH;;AAED,SACI,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAEH,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMU,QAAD,IACG;AAAI,IAAA,SAAS,EAAC;AAAd,KAA+BA,QAAQ,CAACC,cAAxC;AAAwD,IAAA,GAAG,EAAED,QAAQ,CAACE,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKd,UAAU,CAACe,GAAX,CAAe,CAAC;AAAElB,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,EAAea,KAAf,KAAyB;AACrC,WACI,MAAC,SAAD;AAAW,MAAA,GAAG,EAAEd,EAAhB;AAAoB,MAAA,WAAW,EAAEA,EAAjC;AAAqC,MAAA,KAAK,EAAEc,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,QAAD,IACG;AAAI,MAAA,GAAG,EAAEA,QAAQ,CAACE;AAAlB,OAAgCF,QAAQ,CAACI,cAAzC,EAA6DJ,QAAQ,CAACK,eAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKnB,IADL,CADJ,CAFR,CADJ;AAWH,GAZA,CADL,EAcKc,QAAQ,CAACM,WAdd,CAFR,CADJ,EAsBI,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,WAAW,EAAE,CAAxB;AAA2B,IAAA,KAAK,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MADL,CADJ,CAFR,CADJ,CAtBJ,CADJ;AAoCH;;AAED,eAAenB,GAAf","sourcesContent":["import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst finalSpaceCharacters = [\r\n    {\r\n        id: 'gary',\r\n        name: 'Gary Goodspeed'\r\n    },\r\n    {\r\n        id: 'cato',\r\n        name: 'Little Cato'\r\n    },\r\n    {\r\n        id: 'kvn',\r\n        name: 'KVN'\r\n    },\r\n    {\r\n        id: 'mooncake',\r\n        name: 'Mooncake'\r\n    },\r\n    {\r\n        id: 'quinn',\r\n        name: 'Quinn Ergon'\r\n    }\r\n]\r\n\r\nfunction App() {\r\n    const [characters, updateCharacters] = useState(finalSpaceCharacters);\r\n\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n\r\n        const items = Array.from(characters);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n        updateCharacters(items);\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"characters\">\r\n                {(provided) => (\r\n                    <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {characters.map(({ id, name }, index) => {\r\n                            return (\r\n                                <Draggable key={id} draggableId={id} index={index}>\r\n                                    {(provided) => (\r\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                            <div className=\"characters-thumb\">\r\n                                                {name}\r\n                                            </div>\r\n                                        </li>\r\n                                    )}\r\n                                </Draggable>\r\n                            );\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n\r\n            <Droppable droppableId=\"characters-2\">\r\n                <Draggable draggableId={1} index={1}>\r\n                    \r\n                        <li>\r\n                            <div className=\"characters-thumb-2\">\r\n                                {'test'}\r\n                            </div>\r\n                        </li>\r\n                    \r\n                </Draggable>\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}