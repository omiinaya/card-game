{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mr.X\\\\Desktop\\\\nextjs-sequelize\\\\pages\\\\post\\\\[slug].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n/* utils */\n\n/* components */\nimport Layout from '../../components/layout/Layout';\nimport FormPost from '../../components/form/FormPost';\n/* post schemas */\n\nvar FORM_DATA_POST = {\n  title: {\n    value: '',\n    label: 'Title',\n    min: 10,\n    max: 36,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Title'\n    }\n  },\n  content: {\n    value: '',\n    label: 'Content',\n    min: 6,\n    max: 1500,\n    required: true,\n    validator: {\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\n      error: 'Please insert valid Content'\n    }\n  }\n};\n\nfunction Post(props) {\n  _s();\n\n  var router = useRouter();\n  var origin = props.origin,\n      post = props.post,\n      token = props.token;\n  var baseApiUrl = props.baseApiUrl;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(FORM_DATA_POST),\n      stateFormData = _useState2[0],\n      setStateFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      stateFormError = _useState3[0],\n      setStateFormError = _useState3[1];\n\n  var _useState4 = useState({}),\n      stateFormMessage = _useState4[0],\n      setStateFormMessage = _useState4[1];\n\n  var _useState5 = useState(false),\n      stateFormValid = _useState5[0],\n      setStateFormValid = _useState5[1];\n\n  function onSubmitHandler(_x) {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var data, isValid, postApi, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              data = _objectSpread({}, stateFormData);\n              /* email */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                title: data.title.value || ''\n              });\n              /* content */\n\n              data = _objectSpread(_objectSpread({}, data), {}, {\n                content: data.content.value || ''\n              });\n              /* validation handler */\n\n              isValid = validationHandler(stateFormData);\n\n              if (!isValid) {\n                _context.next = 15;\n                break;\n              }\n\n              // Call an external API endpoint to get posts.\n              // You can use any data fetching library\n              setLoading(!loading);\n              _context.next = 9;\n              return fetch(\"\".concat(baseApiUrl, \"/post/[slug]\"), {\n                method: 'POST',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  authorization: token || ''\n                },\n                body: JSON.stringify(data)\n              });\n\n            case 9:\n              postApi = _context.sent;\n              _context.next = 12;\n              return postApi.json();\n\n            case 12:\n              result = _context.sent;\n\n              if (result.message && result.data && result.message === 'done') {\n                router.push({\n                  pathname: result.data.slug ? \"/post/\".concat(result.data.slug) : '/post'\n                });\n              } else {\n                setStateFormMessage(result);\n              }\n\n              setLoading(false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function onChangeHandler(e) {\n    var _e$currentTarget = e.currentTarget,\n        name = _e$currentTarget.name,\n        value = _e$currentTarget.value;\n    setStateFormData(_objectSpread(_objectSpread({}, stateFormData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, stateFormData[name]), {}, {\n      value: value\n    }))));\n    /* validation handler */\n\n    validationHandler(stateFormData, e);\n  }\n\n  function validationHandler(states, e) {\n    var input = e && e.target.name || '';\n    var errors = [];\n    var isValid = true;\n\n    if (input) {\n      if (states[input].required) {\n        if (!states[input].value) {\n          errors[input] = {\n            hint: \"\".concat(states[e.target.name].label, \" required\"),\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n\n      if (states[input].value && states[input].min > states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" min \").concat(states[input].min),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].value && states[input].max < states[input].value.length) {\n        errors[input] = {\n          hint: \"Field \".concat(states[input].label, \" max \").concat(states[input].max),\n          isInvalid: true\n        };\n        isValid = false;\n      }\n\n      if (states[input].validator !== null && typeof states[input].validator === 'object') {\n        if (states[input].value && !states[input].validator.regEx.test(states[input].value)) {\n          errors[input] = {\n            hint: states[input].validator.error,\n            isInvalid: true\n          };\n          isValid = false;\n        }\n      }\n    } else {\n      Object.entries(states).forEach(function (item) {\n        item.forEach(function (field) {\n          errors[item[0]] = '';\n\n          if (field.required) {\n            if (!field.value) {\n              errors[item[0]] = {\n                hint: \"\".concat(field.label, \" required\"),\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n\n          if (field.value && field.min >= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" min \").concat(field.min),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.value && field.max <= field.value.length) {\n            errors[item[0]] = {\n              hint: \"Field \".concat(field.label, \" max \").concat(field.max),\n              isInvalid: true\n            };\n            isValid = false;\n          }\n\n          if (field.validator !== null && typeof field.validator === 'object') {\n            if (field.value && !field.validator.regEx.test(field.value)) {\n              errors[item[0]] = {\n                hint: field.validator.error,\n                isInvalid: true\n              };\n              isValid = false;\n            }\n          }\n        });\n      });\n    }\n\n    if (isValid) {\n      setStateFormValid(isValid);\n    }\n\n    setStateFormError(_objectSpread({}, errors));\n    return isValid;\n  }\n\n  function renderPostForm() {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      href: {\n        pathname: '/post'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(FormPost, {\n      onSubmit: onSubmitHandler,\n      onChange: onChangeHandler,\n      loading: loading,\n      stateFormData: stateFormData,\n      stateFormError: stateFormError,\n      stateFormValid: stateFormValid,\n      stateFormMessage: stateFormMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function renderPostList() {\n    return post.data ? __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/post'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, \"\\u2190 Back\")), __jsx(\"h2\", {\n      className: \"sub-title\",\n      style: {\n        display: 'block',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, post.data.title, __jsx(\"small\", {\n      style: {\n        display: 'block',\n        fontWeight: 'normal',\n        marginTop: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"Posted: \", post.data.createdAt)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, post.data.content), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }), \"By: \", post.data.user.firstName || '', \" \", post.data.user.lastName || '') : __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      \"class\": \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, \"Data Not Found\"));\n  }\n\n  return __jsx(Layout, {\n    title: \"Next.js with Sequelize | Post Page - \".concat(post.data && post.data.title),\n    url: \"\".concat(origin).concat(router.asPath),\n    origin: origin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"content-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, router.asPath === '/post/add' ? renderPostForm() : renderPostList())));\n}\n/* getServerSideProps */\n\n\n_s(Post, \"BwHMmiCW4oI4l43TRsFcuoPqoWU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport var __N_SSP = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Mr.X/Desktop/nextjs-sequelize/pages/post/[slug].js"],"names":["React","useState","Link","useRouter","Layout","FormPost","FORM_DATA_POST","title","value","label","min","max","required","validator","regEx","error","content","Post","props","router","origin","post","token","baseApiUrl","loading","setLoading","stateFormData","setStateFormData","stateFormError","setStateFormError","stateFormMessage","setStateFormMessage","stateFormValid","setStateFormValid","onSubmitHandler","e","preventDefault","data","isValid","validationHandler","fetch","method","headers","Accept","authorization","body","JSON","stringify","postApi","json","result","message","push","pathname","slug","onChangeHandler","currentTarget","name","states","input","target","errors","hint","isInvalid","length","test","Object","entries","forEach","item","field","renderPostForm","renderPostList","display","marginTop","fontWeight","createdAt","user","firstName","lastName","asPath"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\n/* utils */\r\nimport { absoluteUrl, getAppCookies } from '../../middleware/utils';\r\n\r\n/* components */\r\nimport Layout from '../../components/layout/Layout';\r\nimport FormPost from '../../components/form/FormPost';\r\n\r\n/* post schemas */\r\nconst FORM_DATA_POST = {\r\n  title: {\r\n    value: '',\r\n    label: 'Title',\r\n    min: 10,\r\n    max: 36,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Title',\r\n    },\r\n  },\r\n  content: {\r\n    value: '',\r\n    label: 'Content',\r\n    min: 6,\r\n    max: 1500,\r\n    required: true,\r\n    validator: {\r\n      regEx: /^[a-z\\sA-Z0-9\\W\\w]+$/,\r\n      error: 'Please insert valid Content',\r\n    },\r\n  },\r\n};\r\n\r\nfunction Post(props) {\r\n  const router = useRouter();\r\n\r\n  const { origin, post, token } = props;\r\n  const { baseApiUrl } = props;\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [stateFormData, setStateFormData] = useState(FORM_DATA_POST);\r\n  const [stateFormError, setStateFormError] = useState([]);\r\n  const [stateFormMessage, setStateFormMessage] = useState({});\r\n  const [stateFormValid, setStateFormValid] = useState(false);\r\n\r\n  async function onSubmitHandler(e) {\r\n    e.preventDefault();\r\n\r\n    let data = { ...stateFormData };\r\n\r\n    /* email */\r\n    data = { ...data, title: data.title.value || '' };\r\n    /* content */\r\n    data = { ...data, content: data.content.value || '' };\r\n\r\n    /* validation handler */\r\n    const isValid = validationHandler(stateFormData);\r\n\r\n    if (isValid) {\r\n      // Call an external API endpoint to get posts.\r\n      // You can use any data fetching library\r\n      setLoading(!loading);\r\n      const postApi = await fetch(`${baseApiUrl}/post/[slug]`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          authorization: token || '',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      let result = await postApi.json();\r\n      if (result.message && result.data && result.message === 'done') {\r\n        router.push({\r\n          pathname: result.data.slug ? `/post/${result.data.slug}` : '/post',\r\n        });\r\n      } else {\r\n        setStateFormMessage(result);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function onChangeHandler(e) {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setStateFormData({\r\n      ...stateFormData,\r\n      [name]: {\r\n        ...stateFormData[name],\r\n        value,\r\n      },\r\n    });\r\n\r\n    /* validation handler */\r\n    validationHandler(stateFormData, e);\r\n  }\r\n\r\n  function validationHandler(states, e) {\r\n    const input = (e && e.target.name) || '';\r\n    const errors = [];\r\n    let isValid = true;\r\n\r\n    if (input) {\r\n      if (states[input].required) {\r\n        if (!states[input].value) {\r\n          errors[input] = {\r\n            hint: `${states[e.target.name].label} required`,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].min > states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} min ${states[input].min}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].value &&\r\n        states[input].max < states[input].value.length\r\n      ) {\r\n        errors[input] = {\r\n          hint: `Field ${states[input].label} max ${states[input].max}`,\r\n          isInvalid: true,\r\n        };\r\n        isValid = false;\r\n      }\r\n      if (\r\n        states[input].validator !== null &&\r\n        typeof states[input].validator === 'object'\r\n      ) {\r\n        if (\r\n          states[input].value &&\r\n          !states[input].validator.regEx.test(states[input].value)\r\n        ) {\r\n          errors[input] = {\r\n            hint: states[input].validator.error,\r\n            isInvalid: true,\r\n          };\r\n          isValid = false;\r\n        }\r\n      }\r\n    } else {\r\n      Object.entries(states).forEach(item => {\r\n        item.forEach(field => {\r\n          errors[item[0]] = '';\r\n          if (field.required) {\r\n            if (!field.value) {\r\n              errors[item[0]] = {\r\n                hint: `${field.label} required`,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n          if (field.value && field.min >= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} min ${field.min}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.value && field.max <= field.value.length) {\r\n            errors[item[0]] = {\r\n              hint: `Field ${field.label} max ${field.max}`,\r\n              isInvalid: true,\r\n            };\r\n            isValid = false;\r\n          }\r\n          if (field.validator !== null && typeof field.validator === 'object') {\r\n            if (field.value && !field.validator.regEx.test(field.value)) {\r\n              errors[item[0]] = {\r\n                hint: field.validator.error,\r\n                isInvalid: true,\r\n              };\r\n              isValid = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isValid) {\r\n      setStateFormValid(isValid);\r\n    }\r\n    setStateFormError({\r\n      ...errors,\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  function renderPostForm() {\r\n    return (\r\n      <>\r\n        <Link\r\n          href={{\r\n            pathname: '/post',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <FormPost\r\n          onSubmit={onSubmitHandler}\r\n          onChange={onChangeHandler}\r\n          loading={loading}\r\n          stateFormData={stateFormData}\r\n          stateFormError={stateFormError}\r\n          stateFormValid={stateFormValid}\r\n          stateFormMessage={stateFormMessage}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderPostList() {\r\n    return post.data ? (\r\n      <div className=\"card\">\r\n        <Link\r\n          href={{\r\n            pathname: '/post',\r\n          }}\r\n        >\r\n          <a>&larr; Back</a>\r\n        </Link>\r\n        <h2\r\n          className=\"sub-title\"\r\n          style={{\r\n            display: 'block',\r\n            marginTop: '.75rem',\r\n          }}\r\n        >\r\n          {post.data.title}\r\n          <small\r\n            style={{\r\n              display: 'block',\r\n              fontWeight: 'normal',\r\n              marginTop: '.75rem',\r\n            }}\r\n          >\r\n            Posted: {post.data.createdAt}\r\n          </small>\r\n        </h2>\r\n        <p>{post.data.content}</p>\r\n        <hr />\r\n        By: {post.data.user.firstName || ''} {post.data.user.lastName || ''}\r\n      </div>\r\n    ) : (\r\n      <div className=\"container\">\r\n        <div class=\"card\">Data Not Found</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      title={`Next.js with Sequelize | Post Page - ${post.data &&\r\n        post.data.title}`}\r\n      url={`${origin}${router.asPath}`}\r\n      origin={origin}\r\n    >\r\n      <div className=\"container\">\r\n        <main className=\"content-detail\">\r\n          {router.asPath === '/post/add' ? renderPostForm() : renderPostList()}\r\n        </main>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { query, req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  const token = getAppCookies(req).token || '';\r\n  const baseApiUrl = `${origin}/api`;\r\n\r\n  let post = {};\r\n\r\n  if (query.slug !== 'add') {\r\n    const postApi = await fetch(`${baseApiUrl}/post/${query.slug}`);\r\n    post = await postApi.json();\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n      baseApiUrl,\r\n      post,\r\n      token,\r\n    },\r\n  };\r\n}\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}