{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\board\\\\Board.jsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { memo } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useDrop } from 'react-dnd';\nvar style = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  \"float\": 'left'\n};\nexport var Box = function Box(_ref) {\n  _s();\n\n  var name = _ref.name;\n\n  var _useDrag = useDrag(function () {\n    return {\n      type: ItemTypes.BOX,\n      item: {\n        name: name\n      },\n      end: function end(item, monitor) {\n        var dropResult = monitor.getDropResult();\n\n        if (item && dropResult) {\n          alert(\"You dropped \".concat(item.name, \" into \").concat(dropResult.name, \"!\"));\n        }\n      },\n      collect: function collect(monitor) {\n        return {\n          isDragging: monitor.isDragging(),\n          handlerId: monitor.getHandlerId()\n        };\n      }\n    };\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var opacity = isDragging ? 0.4 : 1;\n  return __jsx(\"div\", {\n    ref: drag,\n    role: \"Box\",\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      opacity: opacity\n    }),\n    \"data-testid\": \"box-\".concat(name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, name);\n};\n\n_s(Box, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = Box;\nexport var Container = memo(_c2 = function Container() {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, __jsx(Dustbin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, __jsx(Box, {\n    name: \"Glass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    name: \"Banana\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    name: \"Paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  })));\n});\n_c3 = Container;\nexport var Dustbin = function Dustbin() {\n  _s2();\n\n  var _useDrop = useDrop(function () {\n    return {\n      accept: ItemTypes.BOX,\n      drop: function drop() {\n        return {\n          name: 'Dustbin'\n        };\n      },\n      collect: function collect(monitor) {\n        return {\n          isOver: monitor.isOver(),\n          canDrop: monitor.canDrop()\n        };\n      }\n    };\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      canDrop = _useDrop2$.canDrop,\n      isOver = _useDrop2$.isOver,\n      drop = _useDrop2[1];\n\n  var isActive = canDrop && isOver;\n  var backgroundColor = '#222';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return __jsx(\"div\", {\n    ref: drop,\n    role: 'Dustbin',\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      backgroundColor: backgroundColor\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, isActive ? 'Release to drop' : 'Drag a box here');\n};\n\n_s2(Dustbin, \"F504N0wuFSbvI1XEbEwXUidFCiM=\", false, function () {\n  return [useDrop];\n});\n\n_c4 = Dustbin;\nexport default function Board() {\n  return __jsx(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })));\n}\n_c5 = Board;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Container$memo\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Dustbin\");\n$RefreshReg$(_c5, \"Board\");","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/board/Board.jsx"],"names":["DndProvider","HTML5Backend","memo","useDrag","useDrop","style","border","backgroundColor","padding","marginRight","marginBottom","cursor","Box","name","type","ItemTypes","BOX","item","end","monitor","dropResult","getDropResult","alert","collect","isDragging","handlerId","getHandlerId","drag","opacity","Container","overflow","clear","Dustbin","accept","drop","isOver","canDrop","isActive","Board"],"mappings":"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","sourcesContent":["import { DndProvider } from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport { memo } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nconst style = {\r\n    border: '1px dashed gray',\r\n    backgroundColor: 'white',\r\n    padding: '0.5rem 1rem',\r\n    marginRight: '1.5rem',\r\n    marginBottom: '1.5rem',\r\n    cursor: 'move',\r\n    float: 'left',\r\n};\r\nexport const Box = function Box({ name }) {\r\n    const [{ isDragging }, drag] = useDrag(() => ({\r\n        type: ItemTypes.BOX,\r\n        item: { name },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                alert(`You dropped ${item.name} into ${dropResult.name}!`);\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n            handlerId: monitor.getHandlerId(),\r\n        }),\r\n    }));\r\n    const opacity = isDragging ? 0.4 : 1;\r\n    return (<div ref={drag} role=\"Box\" style={{ ...style, opacity }} data-testid={`box-${name}`}>\r\n        {name}\r\n    </div>);\r\n};\r\n\r\nexport const Container = memo(function Container() {\r\n    return (<div>\r\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\r\n\t\t\t\t<Dustbin />\r\n\t\t\t</div>\r\n\t\t\t<div style={{ overflow: 'hidden', clear: 'both' }}>\r\n\t\t\t\t<Box name=\"Glass\"/>\r\n\t\t\t\t<Box name=\"Banana\"/>\r\n\t\t\t\t<Box name=\"Paper\"/>\r\n\t\t\t</div>\r\n\t\t</div>);\r\n});\r\n\r\nexport const Dustbin = () => {\r\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n        accept: ItemTypes.BOX,\r\n        drop: () => ({ name: 'Dustbin' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n    const isActive = canDrop && isOver;\r\n    let backgroundColor = '#222';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n    return (<div ref={drop} role={'Dustbin'} style={{ ...style, backgroundColor }}>\r\n\t\t\t{isActive ? 'Release to drop' : 'Drag a box here'}\r\n\t\t</div>);\r\n};\r\n\r\nexport default function Board() {\r\n    return (\r\n        <div className=\"App\">\r\n            <DndProvider backend={HTML5Backend}>\r\n                <Example />\r\n            </DndProvider>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}