{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Field.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes';\nconst style = {\n  height: '250px',\n  width: '100%',\n  color: 'white',\n  textAlign: 'center',\n  zIndex: 5,\n  position: 'absolute',\n  bottom: '150px',\n  display: 'flex',\n  justifyContent: 'center'\n};\nexport const Field = props => {\n  console.log(props.cards);\n  const [{\n    canDrop,\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: ItemTypes.CARD,\n    drop: () => ({\n      name: 'Field'\n    }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n  const isActive = canDrop && isOver;\n  let backgroundColor = '#222';\n\n  if (isActive) {\n    backgroundColor = 'darkgreen';\n  } else if (canDrop) {\n    backgroundColor = 'darkkhaki';\n  }\n\n  return __jsx(\"div\", {\n    ref: drop,\n    role: 'Field',\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      backgroundColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, props.cards.map(card => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 45\n    }\n  }, \"test\")));\n};\nexport default Field;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Field.jsx"],"names":["useDrop","ItemTypes","style","height","width","color","textAlign","zIndex","position","bottom","display","justifyContent","Field","props","console","log","cards","canDrop","isOver","drop","accept","CARD","name","collect","monitor","isActive","backgroundColor","map","card"],"mappings":";;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,OADE;AAEVC,EAAAA,KAAK,EAAE,MAFG;AAGVC,EAAAA,KAAK,EAAE,OAHG;AAIVC,EAAAA,SAAS,EAAE,QAJD;AAOVC,EAAAA,MAAM,EAAE,CAPE;AAQVC,EAAAA,QAAQ,EAAE,UARA;AASVC,EAAAA,MAAM,EAAE,OATE;AAUVC,EAAAA,OAAO,EAAE,MAVC;AAWVC,EAAAA,cAAc,EAAE;AAXN,CAAd;AAaA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAlB;AACA,QAAM,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsBC,IAAtB,IAA8BnB,OAAO,CAAC,OAAO;AAC/CoB,IAAAA,MAAM,EAAEnB,SAAS,CAACoB,IAD6B;AAE/CF,IAAAA,IAAI,EAAE,OAAO;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAP,CAFyC;AAG/CC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACnBN,MAAAA,MAAM,EAAEM,OAAO,CAACN,MAAR,EADW;AAEnBD,MAAAA,OAAO,EAAEO,OAAO,CAACP,OAAR;AAFU,KAAd;AAHsC,GAAP,CAAD,CAA3C;AAQA,QAAMQ,QAAQ,GAAGR,OAAO,IAAIC,MAA5B;AACA,MAAIQ,eAAe,GAAG,MAAtB;;AACA,MAAID,QAAJ,EAAc;AACVC,IAAAA,eAAe,GAAG,WAAlB;AACH,GAFD,MAIK,IAAIT,OAAJ,EAAa;AACdS,IAAAA,eAAe,GAAG,WAAlB;AACH;;AAED,SACI;AAAK,IAAA,GAAG,EAAEP,IAAV;AAAgB,IAAA,IAAI,EAAE,OAAtB;AAA+B,IAAA,KAAK,kCAAOjB,KAAP;AAAcwB,MAAAA;AAAd,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSb,KAAK,CAACG,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,CADT,CADJ;AAKH,CAzBM;AA2BP,eAAehB,KAAf","sourcesContent":["import { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\n\r\nconst style = {\r\n    height: '250px',\r\n    width: '100%',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    \r\n   \r\n    zIndex: 5,\r\n    position: 'absolute',\r\n    bottom: '150px',\r\n    display: 'flex', \r\n    justifyContent: 'center',\r\n}\r\nexport const Field = (props) => {\r\n    console.log(props.cards)\r\n    const [{ canDrop, isOver }, drop] = useDrop(() => ({\r\n        accept: ItemTypes.CARD,\r\n        drop: () => ({ name: 'Field' }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    }));\r\n    const isActive = canDrop && isOver;\r\n    let backgroundColor = '#222';\r\n    if (isActive) {\r\n        backgroundColor = 'darkgreen';\r\n    }\r\n\r\n    else if (canDrop) {\r\n        backgroundColor = 'darkkhaki';\r\n    }\r\n\r\n    return (\r\n        <div ref={drop} role={'Field'} style={{ ...style, backgroundColor }}>\r\n                {props.cards.map((card) => (<div>test</div>))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Field"]},"metadata":{},"sourceType":"module"}