{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Board.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport Field from './Field';\nimport Hand from './Hand';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst PlayerHand = memo(function Container() {\n  const {\n    0: onHand,\n    1: setOnHand\n  } = useState([]);\n  const {\n    0: onField,\n    1: setOnField\n  } = useState([]);\n\n  const getCards = () => {\n    //if onHand have not loaded yet then load them from server.\n    if (onHand.length === 0) {\n      axios.get(`/api/card`).then(res => {\n        let hand = res.data.data.sort(() => Math.random() - Math.random()).slice(0, 10);\n        setOnHand(hand);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    sortOnHand();\n    console.log(onHand);\n  }, [onHand]);\n  useEffect(() => {\n    sortOnField();\n    console.log(onField);\n  }, [onField]);\n\n  const handleCardPlayed = index => {\n    setOnHand(prev => prev.filter(card => card.id != index - 1));\n    setOnField(prevArray => [...prevArray, onHand.filter(card => card.id == index - 1)[0]]);\n  };\n\n  const sortOnHand = () => {\n    var myArray = onHand;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  const sortOnField = () => {\n    var myArray = onField;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    cards: onField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Hand, {\n    cards: onHand,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n});\nexport default PlayerHand;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Board.jsx"],"names":["memo","Field","Hand","axios","useEffect","useState","PlayerHand","Container","onHand","setOnHand","onField","setOnField","getCards","length","get","then","res","hand","data","sort","Math","random","slice","sortOnHand","console","log","sortOnField","handleCardPlayed","index","prev","filter","card","id","prevArray","myArray","forEach","element","overflow","clear"],"mappings":"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","sourcesContent":["import { memo } from 'react';\r\nimport Field from './Field';\r\nimport Hand from './Hand';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [onHand, setOnHand] = useState([])\r\n    const [onField, setOnField] = useState([])\r\n\r\n    const getCards = () => {\r\n        //if onHand have not loaded yet then load them from server.\r\n        if (onHand.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                let hand = res.data.data.sort(() => Math.random() - Math.random()).slice(0, 10)\r\n                setOnHand(hand);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortOnHand()\r\n        console.log(onHand)\r\n    }, [onHand]);\r\n\r\n    useEffect(() => {\r\n        sortOnField()\r\n        console.log(onField)\r\n    }, [onField]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        setOnHand(prev => prev.filter(card => card.id != index - 1))\r\n        setOnField(prevArray => [...prevArray, onHand.filter(card => card.id == index - 1)[0]])\r\n    }\r\n\r\n    const sortOnHand = () => {\r\n        var myArray = onHand\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    const sortOnField = () => {\r\n        var myArray = onField\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Field cards={onField}/>\r\n            </div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Hand cards={onHand} playCard={handleCardPlayed} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}