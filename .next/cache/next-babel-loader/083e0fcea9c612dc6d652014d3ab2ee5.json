{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nfernal\\\\Desktop\\\\nextjs-sequelize\\\\components\\\\game\\\\Board.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo } from 'react';\nimport Field from './Field';\nimport Hand from './Hand';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nconst PlayerHand = memo(function Container() {\n  const {\n    0: onHand,\n    1: setOnHand\n  } = useState([]);\n  const {\n    0: onField,\n    1: setOnField\n  } = useState([]);\n\n  const getCards = () => {\n    //if onHand have not loaded yet then load them from server.\n    if (onHand.length === 0) {\n      axios.get(`/api/card`).then(res => {\n        setOnHand(res.data.data);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getCards();\n  }, []);\n  useEffect(() => {\n    sortOnHand();\n  }, [onHand]);\n  useEffect(() => {\n    sortOnField();\n  }, [onField]);\n\n  const handleCardPlayed = index => {\n    setOnField(prev => {\n      var x = onHand.filter(card => card.id == index - 1)[0];\n      return [...prev, x];\n    });\n    setOnHand(prev => prev.filter(card => {\n      return card.id != index - 1;\n    }));\n  };\n\n  const sortOnHand = () => {\n    var myArray = onHand;\n    myArray.forEach(function (element, index) {\n      element.id = index;\n    });\n  };\n\n  const sortOnField = () => {\n    var myArr = onField;\n    console.log(myArr);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    style: {\n      overflow: 'hidden',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Hand, {\n    cards: onHand,\n    playCard: handleCardPlayed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n});\nexport default PlayerHand;","map":{"version":3,"sources":["C:/Users/Nfernal/Desktop/nextjs-sequelize/components/game/Board.jsx"],"names":["memo","Field","Hand","axios","useEffect","useState","PlayerHand","Container","onHand","setOnHand","onField","setOnField","getCards","length","get","then","res","data","sortOnHand","sortOnField","handleCardPlayed","index","prev","x","filter","card","id","myArray","forEach","element","myArr","console","log","overflow","clear"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,UAAU,GAAGN,IAAI,CAAC,SAASO,SAAT,GAAqB;AAEzC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnB;AACA,QAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;AACrBV,MAAAA,KAAK,CAACW,GAAN,CAAW,WAAX,EAAuBC,IAAvB,CAA6BC,GAAD,IAAS;AACjCP,QAAAA,SAAS,CAACO,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAT;AACH,OAFD;AAGH;AACJ,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACV,MAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACT,OAAD,CAFM,CAAT;;AAIA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAChCV,IAAAA,UAAU,CAACW,IAAI,IAAI;AACf,UAAIC,CAAC,GAAGf,MAAM,CAACgB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWL,KAAK,GAAG,CAAzC,EAA4C,CAA5C,CAAR;AACA,aAAO,CAAC,GAAGC,IAAJ,EAAUC,CAAV,CAAP;AACH,KAHS,CAAV;AAIAd,IAAAA,SAAS,CAACa,IAAI,IAAIA,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAI;AAClC,aAAOA,IAAI,CAACC,EAAL,IAAWL,KAAK,GAAG,CAA1B;AACH,KAFiB,CAAT,CAAT;AAGH,GARD;;AAUA,QAAMH,UAAU,GAAG,MAAM;AACrB,QAAIS,OAAO,GAAGnB,MAAd;AACAmB,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAUC,OAAV,EAAmBR,KAAnB,EAA0B;AACtCQ,MAAAA,OAAO,CAACH,EAAR,GAAaL,KAAb;AACH,KAFD;AAGH,GALD;;AAOA,QAAMF,WAAW,GAAG,MAAM;AACtB,QAAIW,KAAK,GAAGpB,OAAZ;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAb;AAAqB,IAAA,QAAQ,EAAEY,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ;AAUH,CA1DsB,CAAvB;AA4DA,eAAed,UAAf","sourcesContent":["import { memo } from 'react';\r\nimport Field from './Field';\r\nimport Hand from './Hand';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PlayerHand = memo(function Container() {\r\n\r\n    const [onHand, setOnHand] = useState([]);\r\n    const [onField, setOnField] = useState([]);\r\n\r\n    const getCards = () => {\r\n        //if onHand have not loaded yet then load them from server.\r\n        if (onHand.length === 0) {\r\n            axios.get(`/api/card`).then((res) => {\r\n                setOnHand(res.data.data);\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCards();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        sortOnHand()\r\n    }, [onHand]);\r\n\r\n    useEffect(() => {\r\n        sortOnField()\r\n    }, [onField]);\r\n\r\n    const handleCardPlayed = (index) => {\r\n        setOnField(prev => {\r\n            var x = onHand.filter(card => card.id == index - 1)[0]\r\n            return [...prev, x]\r\n        })\r\n        setOnHand(prev => prev.filter(card => {\r\n            return card.id != index - 1\r\n        }))\r\n    }\r\n\r\n    const sortOnHand = () => {\r\n        var myArray = onHand\r\n        myArray.forEach(function (element, index) {\r\n            element.id = index;\r\n        });\r\n    }\r\n\r\n    const sortOnField = () => {\r\n        var myArr = onField\r\n        console.log(myArr)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Field />\r\n            </div>\r\n            <div style={{ overflow: 'hidden', clear: 'both' }}>\r\n                <Hand cards={onHand} playCard={handleCardPlayed} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PlayerHand"]},"metadata":{},"sourceType":"module"}